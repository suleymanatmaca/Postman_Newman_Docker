{
  "collection": {
    "_": {
      "postman_id": "50fb2005-50ce-4875-b9bc-8ae9754c71a7",
      "exporter_id": "7359408"
    },
    "item": [
      {
        "id": "d2cfc3f0-44d4-4338-94eb-5ee894277e25",
        "name": "TS1_GET_Check_Header_and_Response_Codes",
        "item": [
          {
            "id": "6e7c9605-4575-4ce3-b28a-9d4f10e1ae98",
            "name": "TC1_Check_Status_Code_200",
            "request": {
              "url": {
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "x-api-key",
                  "value": "{{x-api-key}}"
                }
              ],
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "plain"
                },
                "id": "b63dd40f-80ed-4478-b4f3-4ff1e3260d96",
                "name": "TC1_Check_Status_Code_200",
                "originalRequest": {
                  "url": {
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "937"
                  },
                  {
                    "key": "Cache-Control",
                    "value": "max-age=300"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "text/plain; charset=utf-8"
                  },
                  {
                    "key": "ETag",
                    "value": "W/\"ee7c17ed6bcbb2535a928e2f70226a0558ed7b91db219a77300c30bb068b7ed4\""
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "8D60:DB59:1890F8F:19C59CB:657607E9"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 20:43:10 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510032-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "HIT"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "2"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702240990.322666,VS0,VE0"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b6941521245f5ad9e8943867e2cd323745566bab"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 20:48:10 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "264"
                  }
                ],
                "body": "[\n  {\n    \"id\": 1,\n    \"title\": \"Apple iPad 9. Nesil 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 5400,\n    \"isBasketDiscount\": true,\n    \"basketDiscountPercentage\": 10,\n    \"rating\": 4.69,\n    \"stock\": 50,\n    \"isActive\": false,\n    \"brand\": \"Apple\",\n    \"category\": \"ipad\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\n      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Apple iPhone 12 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 13500,\n    \"isBasketDiscount\": false,\n    \"rating\": 4.4,\n    \"stock\": 20,\n    \"brand\": \"Apple\",\n    \"category\": \"smartphones\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\n    ]\n  }\n]",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9c795762-eb27-4277-86d1-ab8e3877a57c",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                    "\r",
                    "pm.test(\"Response time is less than 500ms\", function () {\r",
                    "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                    "    console.log(\"Response Time: \", pm.response.responseTime.toString());\r",
                    "});"
                  ],
                  "_lastExecutionId": "53e7819a-15cd-4aec-aba2-13a5e5c8a351"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "9bf13f1a-7bdf-4d36-aebf-fda6f06ff34f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c993a032-fb61-43a3-a3d5-510ebc516974"
                }
              }
            ]
          },
          {
            "id": "f7b02d30-4199-4f8d-8d37-14f754fc03f3",
            "name": "TC2_Check_Content_Type",
            "request": {
              "url": {
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "plain"
                },
                "id": "e56f551e-4a39-4c9e-bbbd-cd098338ffbd",
                "name": "TC2_Check_Content_Type",
                "originalRequest": {
                  "url": {
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "937"
                  },
                  {
                    "key": "Cache-Control",
                    "value": "max-age=300"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Content-Type",
                    "value": "text/plain; charset=utf-8"
                  },
                  {
                    "key": "ETag",
                    "value": "W/\"ee7c17ed6bcbb2535a928e2f70226a0558ed7b91db219a77300c30bb068b7ed4\""
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "9C96:E8F4:1D4C192:1EC5137:65762A00"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 21:13:37 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510038-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "MISS"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "0"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702242817.094457,VS0,VE181"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b3126f33a6a68d083585dc1f017eb7be1fd596f0"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 21:18:37 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "0"
                  }
                ],
                "body": "[\n  {\n    \"id\": 1,\n    \"title\": \"Apple iPad 9. Nesil 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 5400,\n    \"isBasketDiscount\": true,\n    \"basketDiscountPercentage\": 10,\n    \"rating\": 4.69,\n    \"stock\": 50,\n    \"isActive\": false,\n    \"brand\": \"Apple\",\n    \"category\": \"ipad\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\n      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Apple iPhone 12 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 13500,\n    \"isBasketDiscount\": false,\n    \"rating\": 4.4,\n    \"stock\": 20,\n    \"brand\": \"Apple\",\n    \"category\": \"smartphones\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\n    ]\n  }\n]",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a4f30400-1cb6-4737-b834-1651e7a2d7b0",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                    "var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\r",
                    "\r",
                    "tests[\"Has Content-Type\"] = contentTypeHeaderExists;\r",
                    "console.log(\"Content-Type is exist\");\r",
                    "\r",
                    "if (contentTypeHeaderExists) {\r",
                    "    tests[\"Content-Type is text/plain; charset=utf-8\"] = \r",
                    "      responseHeaders[\"Content-Type\"].has(\"text/html; charset=utf-8\");\r",
                    "      console.log(\"Content-Type is text/html; charset=utf-8\");\r",
                    "}\r",
                    ""
                  ],
                  "_lastExecutionId": "df67d4a4-36bd-4713-91c8-75c3f943f8f2"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d85ad48-652a-4e41-ae12-d7baf0b8b787",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1acc4dd7-3244-40b1-a427-aaed776e44ac"
                }
              }
            ]
          },
          {
            "id": "8e7a3425-17bb-40eb-bdc0-8f4ad454f8fd",
            "name": "TC3_Check_Status_Code_40x",
            "request": {
              "url": {
                "path": [
                  "badrequest"
                ],
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "x-mock-response-code",
                  "value": "{{randomResponseCode40x}}"
                }
              ],
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "ccf9681e-a10d-4ea7-90f0-3c50ebc14480",
                "name": "TC3_Check_Status_Code_400",
                "originalRequest": {
                  "url": {
                    "path": [
                      "badrequest"
                    ],
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "x-mock-response-code",
                      "value": "{{randomResponseCode40x}}"
                    }
                  ],
                  "method": "GET"
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510038-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "MISS"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "0"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702243249.055240,VS0,VE168"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "0"
                  }
                ],
                "body": "{\n    \"error\": {\n        \"name\": \"mockBadRequest\",\n        \"message\": \"400 Bad Request\",\n        \"header\": \"400 Bad Request\"\n    }\n}",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "97e9010d-1f5b-4cc4-ab30-25cee5821f31",
                "name": "TC3_Check_Status_Code_401",
                "originalRequest": {
                  "url": {
                    "path": [
                      "badrequest"
                    ],
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "x-mock-response-code",
                      "value": "{{randomResponseCode40x}}"
                    }
                  ],
                  "method": "GET"
                },
                "status": "Unauthorized",
                "code": 401,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510038-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "MISS"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "0"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702243249.055240,VS0,VE168"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "0"
                  }
                ],
                "body": "{\n    \"error\": {\n        \"name\": \"mockUnauthorized\",\n        \"message\": \"401 Unauthorized\",\n        \"header\": \"401 Unauthorized\"\n    }\n}",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "77233782-5754-4a8f-923b-3bc0664df863",
                "name": "TC3_Check_Status_Code_402",
                "originalRequest": {
                  "url": {
                    "path": [
                      "badrequest"
                    ],
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "x-mock-response-code",
                      "value": "{{randomResponseCode40x}}"
                    }
                  ],
                  "method": "GET"
                },
                "status": "Payment Required",
                "code": 402,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510038-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "MISS"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "0"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702243249.055240,VS0,VE168"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "0"
                  }
                ],
                "body": "{\n    \"error\": {\n        \"name\": \"mockPaymentRequired\",\n        \"message\": \"402 Payment Required\",\n        \"header\": \"402 Payment Required\"\n    }\n}",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "56fbe7de-a646-48a0-b005-cb694396d3c1",
                "name": "TC3_Check_Status_Code_403",
                "originalRequest": {
                  "url": {
                    "path": [
                      "badrequest"
                    ],
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "x-mock-response-code",
                      "value": "{{randomResponseCode40x}}"
                    }
                  ],
                  "method": "GET"
                },
                "status": "Forbidden",
                "code": 403,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510038-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "MISS"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "0"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702243249.055240,VS0,VE168"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "0"
                  }
                ],
                "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"403 Forbidden\",\n        \"header\": \"403 Forbidden\"\n    }\n}",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "bebaa623-500b-4ef3-9e51-aa786c8344ed",
                "name": "TC3_Check_Status_Code_404",
                "originalRequest": {
                  "url": {
                    "path": [
                      "badrequest"
                    ],
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "x-mock-response-code",
                      "value": "{{randomResponseCode40x}}"
                    }
                  ],
                  "method": "GET"
                },
                "status": "Not Found",
                "code": 404,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510038-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "MISS"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "0"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702243249.055240,VS0,VE168"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "0"
                  }
                ],
                "body": "{\n    \"error\": {\n        \"name\": \"mockNotFound\",\n        \"message\": \"404 Not Found\",\n        \"header\": \"404 Not Found\"\n    }\n}",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "be1a41bf-3637-4f50-8817-4fd23d321b06",
                "name": "TC3_Check_Status_Code_405",
                "originalRequest": {
                  "url": {
                    "path": [
                      "badrequest"
                    ],
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "x-mock-response-code",
                      "value": "{{randomResponseCode40x}}"
                    }
                  ],
                  "method": "GET"
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510038-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "MISS"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "0"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702243249.055240,VS0,VE168"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "0"
                  }
                ],
                "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"405 Method Not Allowed\",\n        \"header\": \"405 Method Not Allowed\"\n    }\n}",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "384e25c0-e114-49fc-b8e4-88becd69b00f",
                "name": "TC3_Check_Status_Code_406",
                "originalRequest": {
                  "url": {
                    "path": [
                      "badrequest"
                    ],
                    "host": [
                      "{{baseURL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "x-mock-response-code",
                      "value": "{{randomResponseCode40x}}"
                    }
                  ],
                  "method": "GET"
                },
                "status": "Not Acceptable",
                "code": 406,
                "header": [
                  {
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "key": "Content-Security-Policy",
                    "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                  },
                  {
                    "key": "Strict-Transport-Security",
                    "value": "max-age=31536000"
                  },
                  {
                    "key": "X-Content-Type-Options",
                    "value": "nosniff"
                  },
                  {
                    "key": "X-Frame-Options",
                    "value": "deny"
                  },
                  {
                    "key": "X-XSS-Protection",
                    "value": "1; mode=block"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "X-GitHub-Request-Id",
                    "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                  },
                  {
                    "key": "Accept-Ranges",
                    "value": "bytes"
                  },
                  {
                    "key": "Date",
                    "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                  },
                  {
                    "key": "Via",
                    "value": "1.1 varnish"
                  },
                  {
                    "key": "X-Served-By",
                    "value": "cache-sof1510038-SOF"
                  },
                  {
                    "key": "X-Cache",
                    "value": "MISS"
                  },
                  {
                    "key": "X-Cache-Hits",
                    "value": "0"
                  },
                  {
                    "key": "X-Timer",
                    "value": "S1702243249.055240,VS0,VE168"
                  },
                  {
                    "key": "Vary",
                    "value": "Authorization,Accept-Encoding,Origin"
                  },
                  {
                    "key": "Access-Control-Allow-Origin",
                    "value": "*"
                  },
                  {
                    "key": "Cross-Origin-Resource-Policy",
                    "value": "cross-origin"
                  },
                  {
                    "key": "X-Fastly-Request-ID",
                    "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                  },
                  {
                    "key": "Expires",
                    "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                  },
                  {
                    "key": "Source-Age",
                    "value": "0"
                  }
                ],
                "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"406 Not Acceptable\",\n        \"header\": \"406 Not Acceptable\"\n    }\n}",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e7d5a9cd-cbea-4e82-8315-dc5532ec0d10",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Verify response status code\", function () {\r",
                    "    const randomResponseCode = pm.variables.get('randomResponseCode40x');\r",
                    "    pm.expect(pm.response.code).to.eql(parseInt(randomResponseCode));\r",
                    "    const responseBody = pm.response.json();\r",
                    "    console.log(\"Error message: \"+ responseBody.error.message);\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "6e06d805-97b8-493f-a617-e8116db461f1"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "62df19fc-3a8a-4fa5-89af-c85e1b4f1c6d",
                  "type": "text/javascript",
                  "exec": [
                    "const responseCodes = [\"400\", \"401\", \"402\", \"403\", \"404\", \"405\", \"406\"];\r",
                    "const randomIndex = Math.floor(Math.random()*responseCodes.length);\r",
                    "const randomResponseCode = responseCodes[randomIndex];\r",
                    "    \r",
                    "pm.variables.set(\"randomResponseCode40x\", randomResponseCode.toString());"
                  ],
                  "_lastExecutionId": "2bfe8747-e632-4f04-8d85-d4c770a440b0"
                }
              }
            ]
          },
          {
            "id": "3c9a08ee-cffe-4c96-91f4-6c7dd5a6a882",
            "name": "TC4_Check_Status_Code_50x",
            "request": {
              "url": {
                "path": [
                  "badrequest"
                ],
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "x-mock-response-code",
                  "value": "{{randomResponseCode50x}}"
                }
              ],
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3d7ed6eb-c4fe-4546-bdb9-e3ae3c35735f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Verify response status code\", function () {\r",
                    "    const randomResponseCode = pm.variables.get('randomResponseCode50x');\r",
                    "    pm.expect(pm.response.code).to.eql(parseInt(randomResponseCode));\r",
                    "    const responseBody = pm.response.json();\r",
                    "    console.log(\"Error message: \"+ responseBody.error.message);\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "31ce77f3-2830-44f8-877a-5d69653633ac"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "13580945-3a9f-458b-bc34-b666ba5b6d59",
                  "type": "text/javascript",
                  "exec": [
                    "const responseCodes = [\"500\", \"501\", \"502\", \"503\", \"504\", \"505\", \"506\"];\r",
                    "const randomIndex = Math.floor(Math.random()*responseCodes.length);\r",
                    "const randomResponseCode = responseCodes[randomIndex];\r",
                    "    \r",
                    "pm.variables.set(\"randomResponseCode50x\", randomResponseCode.toString());"
                  ],
                  "_lastExecutionId": "f15b0fa1-91b6-431e-8f13-0bd23798a024"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e021b704-9c4f-4476-9bf0-f64a2c75e821",
        "name": "TS2_GET_Check_Response_Body_Keys",
        "item": [
          {
            "id": "a53ef9c9-82cc-4a85-acbc-b7acd62fea22",
            "name": "TC5_Check_Response_Body_id",
            "request": {
              "url": {
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "",
                  "value": ""
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ae38f75e-8bc1-40da-95b3-ac81e299da3a",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                    "// Test to check if each object in the response array has the 'id' key\r",
                    "pm.test(\"Check for 'id' keys and have specified values (1,2)\", function () {\r",
                    "    // Parse the response body as JSON\r",
                    "    let jsonData = pm.response.json();\r",
                    "\r",
                    "    // Ensure the response data is an array\r",
                    "    pm.expect(jsonData).to.be.an('array');\r",
                    "    console.log(\"response body as JSON array\");\r",
                    "\r",
                    "    // Iterate through each object in the response array\r",
                    "    jsonData.forEach(function (item) {\r",
                    "        // Check if each object has the 'id' key\r",
                    "        pm.expect(item).to.have.property('id');\r",
                    "    console.log(\"response body has is\");\r",
                    "        // Ensure the 'id' value is a number\r",
                    "        pm.expect(item.id).to.be.a('number');\r",
                    "    console.log(\"response body id is number type\");\r",
                    "        // Check if the ID is one of the specified values\r",
                    "        pm.test(item.id + \" is one of the test ids\", function () {\r",
                    "            pm.expect(item.id).to.be.oneOf(pm.variables.get(\"ids\"));\r",
                    "        });\r",
                    "        \r",
                    "    });\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "853e48f5-b3d5-41f6-ba7c-8c1c42d10a0d"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "c11a6156-b8e6-478a-ae37-b5f8cad24131",
                  "type": "text/javascript",
                  "exec": [
                    "var ids=[1,2]\r",
                    "pm.variables.set(\"ids\",ids);"
                  ],
                  "_lastExecutionId": "13b8fa22-ee8b-404c-8dca-8642e6b3b8c8"
                }
              }
            ]
          },
          {
            "id": "ffcdeaf9-a072-4819-9b39-48c0243feccb",
            "name": "TC6_Check_Response_Body_For_Fixed_Keys",
            "request": {
              "url": {
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "590b4eb2-062f-4496-b69f-c06e57d88540",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                    "// Retrieve the expected keys from the local variable\r",
                    "const expectedKeys = pm.variables.get(\"expectedKeys\");\r",
                    "\r",
                    "// Parse the response body as JSON\r",
                    "const jsonData = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Check for all keys in response and their types\", function () {\r",
                    "    console.log(\"Data length: \"+jsonData.length);\r",
                    "\r",
                    "    // Ensure the response data is an array\r",
                    "    pm.expect(jsonData).to.be.an('array');\r",
                    "    console.log(\"response body as JSON array\");\r",
                    "\r",
                    "    // Iterate through each object in the response array\r",
                    "    jsonData.forEach(function (item, index) {\r",
                    "        // Check if all expected keys are present in the object\r",
                    "        expectedKeys.forEach(function (key) {\r",
                    "            pm.expect(item).haveOwnPropertyDescriptor(key, \"Key '${key}' is missing in object at index ${index}\");\r",
                    "        });\r",
                    "        // Check types of specific keys in each object\r",
                    "        pm.expect(item.id).to.be.a(\"number\");\r",
                    "        console.log(\"response body id type is number\");\r",
                    "        pm.expect(item.title).to.be.a(\"string\");\r",
                    "        console.log(\"response body title type is string\");\r",
                    "        pm.expect(item.description).to.be.a(\"string\");\r",
                    "        console.log(\"response body description type is string\");\r",
                    "        pm.expect(item.price).to.be.a(\"number\");\r",
                    "        console.log(\"response body price type is number\");\r",
                    "        pm.expect(item.isBasketDiscount).to.be.a(\"boolean\");\r",
                    "        console.log(\"response body isBasketDiscount type is boolean\");\r",
                    "        pm.expect(item.rating).to.be.a(\"number\");\r",
                    "        console.log(\"response body rating type is number\");\r",
                    "        pm.expect(item.stock).to.be.a(\"number\");\r",
                    "        console.log(\"response body stock type is number\");\r",
                    "        pm.expect(item.brand).to.be.a(\"string\");\r",
                    "        console.log(\"response body brand type is string\");\r",
                    "        pm.expect(item.category).to.be.a(\"string\");\r",
                    "        console.log(\"response body category type is string\");\r",
                    "        pm.expect(item.images).to.be.an(\"array\");\r",
                    "        console.log(\"response body images type is array\");\r",
                    "         pm.expect(item.images.length).to.be.above(0); // Check the 'images' array length\r",
                    "        item.images.forEach(function (image) {\r",
                    "            pm.expect(image).to.be.a('string'); // Check each image URL in the 'images' array\r",
                    "            console.log(\"response body image url is string\");\r",
                    "        });\r",
                    "    });\r",
                    "});"
                  ],
                  "_lastExecutionId": "6949257a-ef97-4187-8e32-00d4392da6c5"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "60b426db-8593-46df-9f81-ee03b6164c44",
                  "type": "text/javascript",
                  "exec": [
                    "// Define an array containing all expected keys\r",
                    "pm.variables.set(\"expectedKeys\", [\"id\", \"title\", \"description\", \"price\", \"isBasketDiscount\", \"rating\", \"stock\", \"brand\", \"category\", \"images\"]);\r",
                    ""
                  ],
                  "_lastExecutionId": "42c46727-b232-4372-8a74-ecb66054fa8d"
                }
              }
            ]
          },
          {
            "id": "b4ab1024-e73c-432a-b3de-2bce33d6b292",
            "name": "TC7_Check_Response_Body_For_Optional_Keys",
            "request": {
              "url": {
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "26b291f2-47c8-4042-a532-ece5b7943641",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                    "// Retrieve the expected keys from the local variable\r",
                    "const expectedOptionalKeys = pm.variables.get(\"expectedOptionalKeys\");\r",
                    "\r",
                    "// Retrieve the expected keys type from the local variable\r",
                    "const expectedOptionalKeysType = pm.variables.get(\"expectedOptionalKeysType\");\r",
                    "\r",
                    "// Parse the response body as JSON\r",
                    "const jsonData = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Check for optional keys in response and their types\", function () {\r",
                    "    console.log(\"Data length: \"+jsonData.length);\r",
                    "\r",
                    "    // Ensure the response data is an array\r",
                    "    pm.expect(jsonData).to.be.an('array');\r",
                    "    console.log(\"response body as JSON array\");\r",
                    "\r",
                    "    for (let i = 0; i < expectedOptionalKeysType.length; i++) {\r",
                    "    // Iterate through each object in the response array\r",
                    "        jsonData.forEach(function (item, index) {\r",
                    "        // Check if all expected keys are present in the object\r",
                    "\r",
                    "            // Check if the optional property exists in the object\r",
                    "            if (expectedOptionalKeysType[i]===\"number\" && expectedOptionalKeys[i] in item) {\r",
                    "                // If the property exists, assert its type \r",
                    "                pm.expect(Number.isInteger(item[expectedOptionalKeys[i]])).to.be.true;\r",
                    "                    console.log(\"response body basketDiscountPercentage type is number\");\r",
                    "            } else {\r",
                    "                // Handle cases where the property is not present (optional)\r",
                    "                console.log(\"Optional property '${expectedOptionalKeys[i]}' is missing in object at index ${index}\");\r",
                    "            }\r",
                    "      \r",
                    "            // Check if the optional property exists in the object\r",
                    "            if (expectedOptionalKeysType[i]===\"boolean\" && expectedOptionalKeys[i] in item) {\r",
                    "                // If the property exists, assert its type \r",
                    "                pm.expect(Boolean(item[expectedOptionalKeys[i]])).to.be.a(expectedOptionalKeysType[i]);\r",
                    "                console.log(\"response body isActive type is boolean\");\r",
                    "            } else {\r",
                    "                // Handle cases where the property is not present (optional)\r",
                    "                console.log(\"Optional property '${expectedOptionalKeys[i]}' is missing in object at index ${index}\");\r",
                    "            }\r",
                    "        });\r",
                    "    }\r",
                    "});"
                  ],
                  "_lastExecutionId": "34f3556f-7889-4d9c-8a2e-6424da569faa"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "64bd5896-5936-46ae-9426-2bcc8fb3d134",
                  "type": "text/javascript",
                  "exec": [
                    "// Define an array containing all optional keys\r",
                    "pm.variables.set(\"expectedOptionalKeys\", [\"basketDiscountPercentage\",\"isActive\"]);\r",
                    "\r",
                    "// Define an array containing all optional keys\r",
                    "pm.variables.set(\"expectedOptionalKeysType\", ['number','boolean']);"
                  ],
                  "_lastExecutionId": "ec36a8cb-4a04-4b50-9f33-6db80e81e6e0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d6a39532-c20b-4fb0-9846-24da1c816340",
        "name": "TS3_GET_Check_Products",
        "item": [
          {
            "id": "0f208b56-b88e-491c-bc1e-9363437f310b",
            "name": "TC8_Compare_Id_Data",
            "request": {
              "url": {
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "disabled": true,
                  "key": "id",
                  "value": "{{randomId}}"
                }
              ],
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f15f5fa1-b931-4ba9-98c5-19077d47fcc7",
                  "type": "text/javascript",
                  "exec": [
                    "const responseIds = [1, 2];\r",
                    "const randomIndex = Math.floor(Math.random() * responseIds.length);\r",
                    "const randomId = responseIds[randomIndex];\r",
                    "\r",
                    "pm.variables.set(\"randomId\", randomId);\r",
                    "pm.request.url.query.add({ key: 'id', value: randomId.toString() });\r",
                    "\r",
                    "let expectedResponse;\r",
                    "\r",
                    "if (randomId === 1) {\r",
                    "    expectedResponse = {\r",
                    "        \"id\": 1,\r",
                    "        \"title\": \"Apple iPad 9. Nesil 64 GB\",\r",
                    "        \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                    "        \"price\": 5400,\r",
                    "        \"isBasketDiscount\": true,\r",
                    "        \"basketDiscountPercentage\": 10,\r",
                    "        \"rating\": 4.69,\r",
                    "        \"stock\": 50,\r",
                    "        \"isActive\": false,\r",
                    "        \"brand\": \"Apple\",\r",
                    "        \"category\": \"ipad\",\r",
                    "        \"images\": [\r",
                    "            \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r",
                    "            \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r",
                    "        ]\r",
                    "    };\r",
                    "} else {\r",
                    "    expectedResponse = {\r",
                    "        \"id\": 2,\r",
                    "        \"title\": \"Apple iPhone 12 64 GB\",\r",
                    "        \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                    "        \"price\": 13500,\r",
                    "        \"isBasketDiscount\": false,\r",
                    "        \"rating\": 4.4,\r",
                    "        \"stock\": 20,\r",
                    "        \"brand\": \"Apple\",\r",
                    "        \"category\": \"smartphones\",\r",
                    "        \"images\": [\r",
                    "            \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\r",
                    "        ]\r",
                    "    };\r",
                    "}\r",
                    "\r",
                    "pm.variables.set(\"expectedResponse\", expectedResponse);"
                  ],
                  "_lastExecutionId": "9cf4acc4-c3da-4aff-a11d-79111a39f92c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4df75a99-bc72-4264-b7e5-2442b316ebb0",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                    "// Define the expected JSON data\r",
                    "const expectedData = pm.variables.get(\"expectedResponse\");\r",
                    "// Parse the response body as JSON\r",
                    "const responseData = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Compare expected JSON with response data\", function () {\r",
                    "    // Compare properties in the response with the expected data\r",
                    "    Object.keys(responseData).forEach(function (key) {\r",
                    "        pm.expect(responseData[key]).to.eql(expectedData[key]);\r",
                    "    });\r",
                    "    console.log(\"Compare expected JSON data with response data are same\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "a554cb00-f2c0-4dc3-bb28-9378f0b7609a"
                }
              }
            ]
          },
          {
            "id": "a9e8a0dd-2d3b-4134-abed-317e2a5d1448",
            "name": "TC9_Compare_All_Data",
            "request": {
              "url": {
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3f8ef4dc-f526-4927-aec8-4b6f44bdba94",
                  "type": "text/javascript",
                  "exec": [
                    "const expectedResponse =\r",
                    "[\r",
                    "  {\r",
                    "    \"id\": 1,\r",
                    "    \"title\": \"Apple iPad 9. Nesil 64 GB\",\r",
                    "    \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                    "    \"price\": 5400,\r",
                    "    \"isBasketDiscount\": true,\r",
                    "    \"basketDiscountPercentage\": 10,\r",
                    "    \"rating\": 4.69,\r",
                    "    \"stock\": 50,\r",
                    "    \"isActive\": false,\r",
                    "    \"brand\": \"Apple\",\r",
                    "    \"category\": \"ipad\",\r",
                    "    \"images\": [\r",
                    "      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r",
                    "      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r",
                    "    ]\r",
                    "  },\r",
                    "  {\r",
                    "    \"id\": 2,\r",
                    "    \"title\": \"Apple iPhone 12 64 GB\",\r",
                    "    \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                    "    \"price\": 13500,\r",
                    "    \"isBasketDiscount\": false,\r",
                    "    \"rating\": 4.4,\r",
                    "    \"stock\": 20,\r",
                    "    \"brand\": \"Apple\",\r",
                    "    \"category\": \"smartphones\",\r",
                    "    \"images\": [\r",
                    "      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\r",
                    "    ]\r",
                    "  }\r",
                    "];\r",
                    "\r",
                    "pm.variables.set(\"expectedResponse\", expectedResponse); "
                  ],
                  "_lastExecutionId": "cde02f42-d5a0-410e-8846-12e464a94224"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4c18aac0-b2e0-4429-b8e4-b1acd223ad7d",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                    "// Define the expected JSON data\r",
                    "const expectedData = pm.variables.get(\"expectedResponse\");\r",
                    "\r",
                    "// Parse the response body as JSON\r",
                    "const responseData = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Compare expected JSON with response data\", function () {\r",
                    "    // Ensure the response data is an array\r",
                    "    pm.expect(responseData).to.be.an('array');\r",
                    "\r",
                    "    // Check if the response length matches the expected data length\r",
                    "    pm.expect(responseData.length).to.equal(expectedData.length);\r",
                    "    console.log(\"Response data length is equal to expected data length\");\r",
                    "    // Compare each object in the response with the expected data\r",
                    "    expectedData.forEach(function (expectedItem, index) {\r",
                    "        const responseItem = responseData[index];\r",
                    "\r",
                    "        // Compare properties in each object\r",
                    "        Object.keys(expectedItem).forEach(function (key) {\r",
                    "            pm.expect(responseItem[key]).to.deep.equal(expectedItem[key]);\r",
                    "        });\r",
                    "    });\r",
                    "        console.log(\"Compare All product data with response data are same\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "cbb7143b-54cf-43be-96fe-83c7cb992870"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fe838105-c98c-4255-8772-ed8b8347990f",
        "name": "TS4_POST_Check_Products_Add",
        "item": [
          {
            "id": "2330415b-f160-4fc8-90b7-4adf47022651",
            "name": "TC11_Check_Product_Add",
            "request": {
              "url": {
                "path": [
                  "add"
                ],
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"id\": 3,\r\n    \"title\": \"Samsung Note 12 64 GB\",\r\n    \"description\": \"Lorem ipsum dolor sit amet.\",\r\n    \"price\": 10500,\r\n    \"isBasketDiscount\": true,\r\n    \"rating\": 4.6,\r\n    \"stock\": 30,\r\n    \"brand\": \"Samsung\",\r\n    \"category\": \"smartphones\",\r\n    \"images\": [\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/1_org_zoom.jpg\",\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/2_org_zoom.jpg\",\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/3_org_zoom.jpg\"\r\n        ]\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "391d4baa-cb52-4b4c-b784-70d99fe9eab7",
                  "type": "text/javascript",
                  "exec": [
                    "const expectedResponse =\r",
                    "[\r",
                    "  {\r",
                    "    \"id\": 1,\r",
                    "    \"title\": \"Apple iPad 9. Nesil 64 GB\",\r",
                    "    \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                    "    \"price\": 5400,\r",
                    "    \"isBasketDiscount\": true,\r",
                    "    \"basketDiscountPercentage\": 10,\r",
                    "    \"rating\": 4.69,\r",
                    "    \"stock\": 50,\r",
                    "    \"isActive\": false,\r",
                    "    \"brand\": \"Apple\",\r",
                    "    \"category\": \"ipad\",\r",
                    "    \"images\": [\r",
                    "      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r",
                    "      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r",
                    "    ]\r",
                    "  },\r",
                    "  {\r",
                    "    \"id\": 2,\r",
                    "    \"title\": \"Apple iPhone 12 64 GB\",\r",
                    "    \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                    "    \"price\": 13500,\r",
                    "    \"isBasketDiscount\": false,\r",
                    "    \"rating\": 4.4,\r",
                    "    \"stock\": 20,\r",
                    "    \"brand\": \"Apple\",\r",
                    "    \"category\": \"smartphones\",\r",
                    "    \"images\": [\r",
                    "      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\r",
                    "    ]\r",
                    "  },\r",
                    "    {\r",
                    "        \"id\": 3,\r",
                    "        \"title\": \"Samsung Note 12 64 GB\",\r",
                    "        \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                    "        \"price\": 10500,\r",
                    "        \"isBasketDiscount\": true,\r",
                    "        \"rating\": 4.6,\r",
                    "        \"stock\": 30,\r",
                    "        \"brand\": \"Samsung\",\r",
                    "        \"category\": \"smartphones\",\r",
                    "        \"images\": [\r",
                    "            \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/1_org_zoom.jpg\",\r",
                    "            \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/2_org_zoom.jpg\",\r",
                    "            \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/3_org_zoom.jpg\"\r",
                    "        ]\r",
                    "    }\r",
                    "];\r",
                    "\r",
                    "pm.variables.set(\"expectedResponse\", expectedResponse); "
                  ],
                  "_lastExecutionId": "360901fd-a0ce-488b-8802-58a3aa3ee5cc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bbbf1d25-f304-4f20-8fdd-72ebcbffe441",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 201\"] = responseCode.code === 201;\r",
                    "console.log(\"New product added\");\r",
                    "// Define the expected JSON data\r",
                    "const expectedData = pm.variables.get(\"expectedResponse\");\r",
                    "// Parse the response body as JSON\r",
                    "const responseData = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Compare expected JSON with response data\", function () {\r",
                    "    // Compare properties in the response with the expected data\r",
                    "    Object.keys(responseData).forEach(function (key) {\r",
                    "        pm.expect(responseData[key]).to.eql(expectedData[key]);\r",
                    "    });\r",
                    "    console.log(\"Compare expected JSON data with response data are same\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "ca112a15-1841-4c16-a64d-c6bcbeb4b189"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8e07d848-0478-4f50-8b38-df6d3eee8a22",
        "name": "TS5_PUT_Check_Products_Update",
        "item": [
          {
            "id": "1af0e0ce-fbe0-446c-ab89-edde21a2b41f",
            "name": "TC12_Check_Product_Update",
            "request": {
              "url": {
                "path": [
                  "put"
                ],
                "host": [
                  "{{baseURL}}"
                ],
                "query": [
                  {
                    "key": "id",
                    "value": "1"
                  }
                ],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\r\n        \"id\": 1,\r\n        \"title\": \"Apple iPad 10. Nesil 64 GB\",\r\n        \"description\": \"Lorem ipsum dolor sit amet.\",\r\n        \"price\": 5400,\r\n        \"isBasketDiscount\": true,\r\n        \"basketDiscountPercentage\": 10,\r\n        \"rating\": 4.69,\r\n        \"stock\": 50,\r\n        \"isActive\": false,\r\n        \"brand\": \"Apple\",\r\n        \"category\": \"ipad\",\r\n        \"images\": [\r\n            \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r\n            \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r\n        ]\r\n    }",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "afb42b03-07fc-44ce-a344-a0789b7505a3",
                  "type": "text/javascript",
                  "exec": [
                    "const expectedResponse =\r",
                    "  {\r",
                    "        \"id\": 1,\r",
                    "        \"title\": \"Apple iPad 10. Nesil 64 GB\",\r",
                    "        \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                    "        \"price\": 5400,\r",
                    "        \"isBasketDiscount\": true,\r",
                    "        \"basketDiscountPercentage\": 10,\r",
                    "        \"rating\": 4.69,\r",
                    "        \"stock\": 50,\r",
                    "        \"isActive\": false,\r",
                    "        \"brand\": \"Apple\",\r",
                    "        \"category\": \"ipad\",\r",
                    "        \"images\": [\r",
                    "            \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r",
                    "            \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r",
                    "        ]\r",
                    "    };\r",
                    "\r",
                    "pm.variables.set(\"expectedResponse\", expectedResponse); "
                  ],
                  "_lastExecutionId": "3a22f50d-7764-4649-a07a-34003c2f3bac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2d916e52-b0fc-48bd-9673-86a443e50d24",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 202\"] = responseCode.code === 202;\r",
                    "console.log(\"Product updated\");\r",
                    "// Define the expected JSON data\r",
                    "const expectedData = pm.variables.get(\"expectedResponse\");\r",
                    "// Parse the response body as JSON\r",
                    "const responseData = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Compare expected JSON with response data\", function () {\r",
                    "    // Compare properties in the response with the expected data\r",
                    "    Object.keys(responseData).forEach(function (key) {\r",
                    "        pm.expect(responseData[key]).to.eql(expectedData[key]);\r",
                    "    });\r",
                    "    console.log(\"Compare expected JSON data with response data are same\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "81e19cfe-37b5-4b00-93cd-3f7018fca256"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "cfd8389d-fe2b-4ec2-b8b4-212a2018d3b1",
        "name": "TS6_DELETE_Check_Products_Delete",
        "item": [
          {
            "id": "70e808f5-25a8-455e-b6ec-46eaf6bac726",
            "name": "TC13_Check_Product_Add",
            "request": {
              "url": {
                "path": [
                  "delete"
                ],
                "host": [
                  "{{baseURL}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "531b3643-b50d-49c4-a7b6-c98241d8d7fb",
                  "type": "text/javascript",
                  "exec": [
                    "const responseIds = [1, 2];\r",
                    "const randomIndex = Math.floor(Math.random() * responseIds.length);\r",
                    "const randomId = responseIds[randomIndex];\r",
                    "\r",
                    "pm.variables.set(\"randomId\", randomId);\r",
                    "pm.request.url.query.add({ key: 'id', value: randomId.toString() });"
                  ],
                  "_lastExecutionId": "d9700a94-c659-4ce2-8613-a5f1eb9e167a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b53c1bad-e357-404b-bff7-6c3b2916e332",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"Status code is 204\"] = responseCode.code === 204;\r",
                    "console.log(\"${randomId} Product added\");\r",
                    "\r",
                    "pm.test(\"Check for empty response\", function () {\r",
                    "    const responseData = pm.response.text();\r",
                    "    console.log(\"Response Body:\", pm.response.text());\r",
                    "    pm.expect(responseBody).to.be.empty; // Compare response data with an empty object\r",
                    "    console.log(\"Response Body is empty\");\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "c37a73e1-82d0-484d-b082-7ad9ee06bc44"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [
      {
        "listen": "prerequest",
        "script": {
          "id": "f887092f-6575-4cd0-8d13-caaee91bb7eb",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "8c559188-60c3-413f-af82-30b4cb0303c3"
        }
      },
      {
        "listen": "test",
        "script": {
          "id": "5ebde787-d874-42d5-a6a9-577c221c1ab6",
          "type": "text/javascript",
          "exec": [
            ""
          ],
          "_lastExecutionId": "d1bc4205-f4f4-42df-a4db-95f09d102296"
        }
      }
    ],
    "variable": [
      {
        "type": "string",
        "value": "https://gist.githubusercontent.com/sinanerdinc/71d6a6442d805ce0bc33a6feb2e2c6b5/raw/750f7305a931b7a2577c805a7e3cde12bee33124/example_products.json",
        "key": "baseURL"
      }
    ],
    "info": {
      "_postman_id": "50fb2005-50ce-4875-b9bc-8ae9754c71a7",
      "name": "example_products",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment",
      "postman_exported_at": "2023-12-11T00:12:15.743Z",
      "postman_exported_using": "Postman/10.20.10"
    },
    "id": "ec60e348-bfd1-4524-8138-3a53fe9353bd",
    "name": "BtcMockServerEnv",
    "values": [
      {
        "type": "any",
        "value": "https://8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
        "key": "baseURL"
      },
      {
        "type": "any",
        "value": "400",
        "key": "randomResponseCode40x"
      },
      {
        "type": "any",
        "value": "500",
        "key": "randomResponseCode50x"
      }
    ]
  },
  "globals": {
    "id": "7f42c74d-d648-4b46-9320-4525d7c9395e",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 48,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 12,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 25,
        "pending": 0,
        "failed": 1
      },
      "testScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 24,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 420.25,
      "responseMin": 286,
      "responseMax": 1031,
      "responseSd": 211.68220087354217,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1702260158555,
      "completed": 1702260163940
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 12,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3a4bd067-e9b4-491a-bea8-f66b8e0f6e76",
          "httpRequestId": "d3f713c2-c219-4bfe-ba1d-599b0161f2e3"
        },
        "item": {
          "id": "6e7c9605-4575-4ce3-b28a-9d4f10e1ae98",
          "name": "TC1_Check_Status_Code_200",
          "request": {
            "url": {
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "x-api-key",
                "value": "{{x-api-key}}"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "plain"
              },
              "id": "b63dd40f-80ed-4478-b4f3-4ff1e3260d96",
              "name": "TC1_Check_Status_Code_200",
              "originalRequest": {
                "url": {
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "937"
                },
                {
                  "key": "Cache-Control",
                  "value": "max-age=300"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "ETag",
                  "value": "W/\"ee7c17ed6bcbb2535a928e2f70226a0558ed7b91db219a77300c30bb068b7ed4\""
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "8D60:DB59:1890F8F:19C59CB:657607E9"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 20:43:10 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510032-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "HIT"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "2"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702240990.322666,VS0,VE0"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b6941521245f5ad9e8943867e2cd323745566bab"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 20:48:10 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "264"
                }
              ],
              "body": "[\n  {\n    \"id\": 1,\n    \"title\": \"Apple iPad 9. Nesil 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 5400,\n    \"isBasketDiscount\": true,\n    \"basketDiscountPercentage\": 10,\n    \"rating\": 4.69,\n    \"stock\": 50,\n    \"isActive\": false,\n    \"brand\": \"Apple\",\n    \"category\": \"ipad\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\n      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Apple iPhone 12 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 13500,\n    \"isBasketDiscount\": false,\n    \"rating\": 4.4,\n    \"stock\": 20,\n    \"brand\": \"Apple\",\n    \"category\": \"smartphones\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\n    ]\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c795762-eb27-4277-86d1-ab8e3877a57c",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "\r",
                  "pm.test(\"Response time is less than 500ms\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "    console.log(\"Response Time: \", pm.response.responseTime.toString());\r",
                  "});"
                ],
                "_lastExecutionId": "53e7819a-15cd-4aec-aba2-13a5e5c8a351"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9bf13f1a-7bdf-4d36-aebf-fda6f06ff34f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c993a032-fb61-43a3-a3d5-510ebc516974"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              ""
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "x-api-key",
              "value": "{{x-api-key}}"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f9187a96-e441-409f-a134-ee6566eecf9c",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "679b7fbf-b691-45b1-b8c4-6588b1a127bb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:39 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=6ac259e7ef88f102"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=7471250d559b7252"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "119"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"423-jS0d7/HCNIWgtuyDXsN2LNagvC4\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              97,
              100,
              32,
              57,
              46,
              32,
              78,
              101,
              115,
              105,
              108,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              53,
              52,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              80,
              101,
              114,
              99,
              101,
              110,
              116,
              97,
              103,
              101,
              34,
              58,
              32,
              49,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              53,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              105,
              112,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              49,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              51,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              51,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              104,
              111,
              110,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              51,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              50,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              54,
              53,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              93
            ]
          },
          "cookie": [],
          "responseTime": 1031,
          "responseSize": 1059
        },
        "id": "6e7c9605-4575-4ce3-b28a-9d4f10e1ae98",
        "assertions": [
          {
            "assertion": "Response time is less than 500ms",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Response time is less than 500ms",
              "message": "expected 1031 to be below 500",
              "stack": "AssertionError: expected 1031 to be below 500\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "16e6e16f-2e1b-4740-bcf8-2557f80244f6",
          "length": 12,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "1502a78d-b0c6-4962-bacb-90d1750e1672"
        },
        "item": {
          "id": "f7b02d30-4199-4f8d-8d37-14f754fc03f3",
          "name": "TC2_Check_Content_Type",
          "request": {
            "url": {
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "plain"
              },
              "id": "e56f551e-4a39-4c9e-bbbd-cd098338ffbd",
              "name": "TC2_Check_Content_Type",
              "originalRequest": {
                "url": {
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "937"
                },
                {
                  "key": "Cache-Control",
                  "value": "max-age=300"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "ETag",
                  "value": "W/\"ee7c17ed6bcbb2535a928e2f70226a0558ed7b91db219a77300c30bb068b7ed4\""
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "9C96:E8F4:1D4C192:1EC5137:65762A00"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 21:13:37 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510038-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "MISS"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "0"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702242817.094457,VS0,VE181"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b3126f33a6a68d083585dc1f017eb7be1fd596f0"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 21:18:37 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "0"
                }
              ],
              "body": "[\n  {\n    \"id\": 1,\n    \"title\": \"Apple iPad 9. Nesil 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 5400,\n    \"isBasketDiscount\": true,\n    \"basketDiscountPercentage\": 10,\n    \"rating\": 4.69,\n    \"stock\": 50,\n    \"isActive\": false,\n    \"brand\": \"Apple\",\n    \"category\": \"ipad\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\n      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Apple iPhone 12 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 13500,\n    \"isBasketDiscount\": false,\n    \"rating\": 4.4,\n    \"stock\": 20,\n    \"brand\": \"Apple\",\n    \"category\": \"smartphones\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\n    ]\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a4f30400-1cb6-4737-b834-1651e7a2d7b0",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\r",
                  "\r",
                  "tests[\"Has Content-Type\"] = contentTypeHeaderExists;\r",
                  "console.log(\"Content-Type is exist\");\r",
                  "\r",
                  "if (contentTypeHeaderExists) {\r",
                  "    tests[\"Content-Type is text/plain; charset=utf-8\"] = \r",
                  "      responseHeaders[\"Content-Type\"].has(\"text/html; charset=utf-8\");\r",
                  "      console.log(\"Content-Type is text/html; charset=utf-8\");\r",
                  "}\r",
                  ""
                ],
                "_lastExecutionId": "df67d4a4-36bd-4713-91c8-75c3f943f8f2"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2d85ad48-652a-4e41-ae12-d7baf0b8b787",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "1acc4dd7-3244-40b1-a427-aaed776e44ac"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              ""
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "dc725279-8013-4b09-8eb1-3d18bfa99c9a",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "030e9db6-a493-4219-a370-e64ff581da43",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:39 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=785761ddd6099e8f"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=88e85b5a7a2eb9b0"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "118"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"423-jS0d7/HCNIWgtuyDXsN2LNagvC4\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              97,
              100,
              32,
              57,
              46,
              32,
              78,
              101,
              115,
              105,
              108,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              53,
              52,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              80,
              101,
              114,
              99,
              101,
              110,
              116,
              97,
              103,
              101,
              34,
              58,
              32,
              49,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              53,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              105,
              112,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              49,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              51,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              51,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              104,
              111,
              110,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              51,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              50,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              54,
              53,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              93
            ]
          },
          "cookie": [],
          "responseTime": 315,
          "responseSize": 1059
        },
        "id": "f7b02d30-4199-4f8d-8d37-14f754fc03f3",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Has Content-Type",
            "skipped": false
          },
          {
            "assertion": "Content-Type is text/plain; charset=utf-8",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d618b609-07ea-4252-8a02-0298ef42499d",
          "length": 12,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "06ca3128-89bf-430c-84bb-77689634c511"
        },
        "item": {
          "id": "8e7a3425-17bb-40eb-bdc0-8f4ad454f8fd",
          "name": "TC3_Check_Status_Code_40x",
          "request": {
            "url": {
              "path": [
                "badrequest"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "x-mock-response-code",
                "value": "{{randomResponseCode40x}}"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ccf9681e-a10d-4ea7-90f0-3c50ebc14480",
              "name": "TC3_Check_Status_Code_400",
              "originalRequest": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode40x}}"
                  }
                ],
                "method": "GET"
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510038-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "MISS"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "0"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702243249.055240,VS0,VE168"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "0"
                }
              ],
              "body": "{\n    \"error\": {\n        \"name\": \"mockBadRequest\",\n        \"message\": \"400 Bad Request\",\n        \"header\": \"400 Bad Request\"\n    }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "97e9010d-1f5b-4cc4-ab30-25cee5821f31",
              "name": "TC3_Check_Status_Code_401",
              "originalRequest": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode40x}}"
                  }
                ],
                "method": "GET"
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510038-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "MISS"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "0"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702243249.055240,VS0,VE168"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "0"
                }
              ],
              "body": "{\n    \"error\": {\n        \"name\": \"mockUnauthorized\",\n        \"message\": \"401 Unauthorized\",\n        \"header\": \"401 Unauthorized\"\n    }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "77233782-5754-4a8f-923b-3bc0664df863",
              "name": "TC3_Check_Status_Code_402",
              "originalRequest": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode40x}}"
                  }
                ],
                "method": "GET"
              },
              "status": "Payment Required",
              "code": 402,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510038-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "MISS"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "0"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702243249.055240,VS0,VE168"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "0"
                }
              ],
              "body": "{\n    \"error\": {\n        \"name\": \"mockPaymentRequired\",\n        \"message\": \"402 Payment Required\",\n        \"header\": \"402 Payment Required\"\n    }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "56fbe7de-a646-48a0-b005-cb694396d3c1",
              "name": "TC3_Check_Status_Code_403",
              "originalRequest": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode40x}}"
                  }
                ],
                "method": "GET"
              },
              "status": "Forbidden",
              "code": 403,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510038-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "MISS"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "0"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702243249.055240,VS0,VE168"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "0"
                }
              ],
              "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"403 Forbidden\",\n        \"header\": \"403 Forbidden\"\n    }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "bebaa623-500b-4ef3-9e51-aa786c8344ed",
              "name": "TC3_Check_Status_Code_404",
              "originalRequest": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode40x}}"
                  }
                ],
                "method": "GET"
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510038-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "MISS"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "0"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702243249.055240,VS0,VE168"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "0"
                }
              ],
              "body": "{\n    \"error\": {\n        \"name\": \"mockNotFound\",\n        \"message\": \"404 Not Found\",\n        \"header\": \"404 Not Found\"\n    }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "be1a41bf-3637-4f50-8817-4fd23d321b06",
              "name": "TC3_Check_Status_Code_405",
              "originalRequest": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode40x}}"
                  }
                ],
                "method": "GET"
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510038-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "MISS"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "0"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702243249.055240,VS0,VE168"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "0"
                }
              ],
              "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"405 Method Not Allowed\",\n        \"header\": \"405 Method Not Allowed\"\n    }\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "384e25c0-e114-49fc-b8e4-88becd69b00f",
              "name": "TC3_Check_Status_Code_406",
              "originalRequest": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode40x}}"
                  }
                ],
                "method": "GET"
              },
              "status": "Not Acceptable",
              "code": 406,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510038-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "MISS"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "0"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702243249.055240,VS0,VE168"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "0"
                }
              ],
              "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"406 Not Acceptable\",\n        \"header\": \"406 Not Acceptable\"\n    }\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7d5a9cd-cbea-4e82-8315-dc5532ec0d10",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify response status code\", function () {\r",
                  "    const randomResponseCode = pm.variables.get('randomResponseCode40x');\r",
                  "    pm.expect(pm.response.code).to.eql(parseInt(randomResponseCode));\r",
                  "    const responseBody = pm.response.json();\r",
                  "    console.log(\"Error message: \"+ responseBody.error.message);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "6e06d805-97b8-493f-a617-e8116db461f1"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "62df19fc-3a8a-4fa5-89af-c85e1b4f1c6d",
                "type": "text/javascript",
                "exec": [
                  "const responseCodes = [\"400\", \"401\", \"402\", \"403\", \"404\", \"405\", \"406\"];\r",
                  "const randomIndex = Math.floor(Math.random()*responseCodes.length);\r",
                  "const randomResponseCode = responseCodes[randomIndex];\r",
                  "    \r",
                  "pm.variables.set(\"randomResponseCode40x\", randomResponseCode.toString());"
                ],
                "_lastExecutionId": "2bfe8747-e632-4f04-8d85-d4c770a440b0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "badrequest"
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "x-mock-response-code",
              "value": "404"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c4951664-9ddb-4f93-b617-8180bd90ddd8",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "7746a19f-dcb3-4fd4-8561-f04a9600bc5b",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:39 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "123"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=ade7345df31a3b24"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=c7530742dbd6faae"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "117"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"7b-v0e+bSWg5tMULGrzAMxVxivIBmI\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              32,
              34,
              109,
              111,
              99,
              107,
              69,
              114,
              114,
              111,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              52,
              48,
              52,
              32,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              32,
              34,
              52,
              48,
              52,
              32,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              34,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 322,
          "responseSize": 123
        },
        "id": "8e7a3425-17bb-40eb-bdc0-8f4ad454f8fd",
        "assertions": [
          {
            "assertion": "Verify response status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ff85d8a0-9687-4e49-b4d8-0eb8ee28b31c",
          "length": 12,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1b0c96fb-5507-4437-a221-1282e6609fa1"
        },
        "item": {
          "id": "3c9a08ee-cffe-4c96-91f4-6c7dd5a6a882",
          "name": "TC4_Check_Status_Code_50x",
          "request": {
            "url": {
              "path": [
                "badrequest"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "x-mock-response-code",
                "value": "{{randomResponseCode50x}}"
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d7ed6eb-c4fe-4546-bdb9-e3ae3c35735f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Verify response status code\", function () {\r",
                  "    const randomResponseCode = pm.variables.get('randomResponseCode50x');\r",
                  "    pm.expect(pm.response.code).to.eql(parseInt(randomResponseCode));\r",
                  "    const responseBody = pm.response.json();\r",
                  "    console.log(\"Error message: \"+ responseBody.error.message);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "31ce77f3-2830-44f8-877a-5d69653633ac"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "13580945-3a9f-458b-bc34-b666ba5b6d59",
                "type": "text/javascript",
                "exec": [
                  "const responseCodes = [\"500\", \"501\", \"502\", \"503\", \"504\", \"505\", \"506\"];\r",
                  "const randomIndex = Math.floor(Math.random()*responseCodes.length);\r",
                  "const randomResponseCode = responseCodes[randomIndex];\r",
                  "    \r",
                  "pm.variables.set(\"randomResponseCode50x\", randomResponseCode.toString());"
                ],
                "_lastExecutionId": "f15b0fa1-91b6-431e-8f13-0bd23798a024"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "badrequest"
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "x-mock-response-code",
              "value": "503"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1c7b8377-0bd4-4844-afec-b71ba4fca55a",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "5063d050-2c0f-4e49-8bf4-14bbaa7ad320",
          "status": "Service Unavailable",
          "code": 503,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:40 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "143"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=8842f8bda3bb421f"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=ff67438c16304c2b"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "116"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"8f-FoVsgHQ8QcAmHzjypHctJdi8w1M\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              32,
              34,
              109,
              111,
              99,
              107,
              69,
              114,
              114,
              111,
              114,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              32,
              34,
              53,
              48,
              51,
              32,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              85,
              110,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              32,
              34,
              53,
              48,
              51,
              32,
              83,
              101,
              114,
              118,
              105,
              99,
              101,
              32,
              85,
              110,
              97,
              118,
              97,
              105,
              108,
              97,
              98,
              108,
              101,
              34,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 306,
          "responseSize": 143
        },
        "id": "3c9a08ee-cffe-4c96-91f4-6c7dd5a6a882",
        "assertions": [
          {
            "assertion": "Verify response status code",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "520a1aaa-432d-4a60-9bd4-a0883874f488",
          "length": 12,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "393d17a1-5f97-4276-95e5-0643432c26a9"
        },
        "item": {
          "id": "a53ef9c9-82cc-4a85-acbc-b7acd62fea22",
          "name": "TC5_Check_Response_Body_id",
          "request": {
            "url": {
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "",
                "value": ""
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ae38f75e-8bc1-40da-95b3-ac81e299da3a",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "// Test to check if each object in the response array has the 'id' key\r",
                  "pm.test(\"Check for 'id' keys and have specified values (1,2)\", function () {\r",
                  "    // Parse the response body as JSON\r",
                  "    let jsonData = pm.response.json();\r",
                  "\r",
                  "    // Ensure the response data is an array\r",
                  "    pm.expect(jsonData).to.be.an('array');\r",
                  "    console.log(\"response body as JSON array\");\r",
                  "\r",
                  "    // Iterate through each object in the response array\r",
                  "    jsonData.forEach(function (item) {\r",
                  "        // Check if each object has the 'id' key\r",
                  "        pm.expect(item).to.have.property('id');\r",
                  "    console.log(\"response body has is\");\r",
                  "        // Ensure the 'id' value is a number\r",
                  "        pm.expect(item.id).to.be.a('number');\r",
                  "    console.log(\"response body id is number type\");\r",
                  "        // Check if the ID is one of the specified values\r",
                  "        pm.test(item.id + \" is one of the test ids\", function () {\r",
                  "            pm.expect(item.id).to.be.oneOf(pm.variables.get(\"ids\"));\r",
                  "        });\r",
                  "        \r",
                  "    });\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "853e48f5-b3d5-41f6-ba7c-8c1c42d10a0d"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "c11a6156-b8e6-478a-ae37-b5f8cad24131",
                "type": "text/javascript",
                "exec": [
                  "var ids=[1,2]\r",
                  "pm.variables.set(\"ids\",ids);"
                ],
                "_lastExecutionId": "13b8fa22-ee8b-404c-8dca-8642e6b3b8c8"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              ""
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4a264121-5396-4afe-bd66-d557c3a8464b",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e8dc86e9-3872-4a2f-85ec-aa6e26ef177b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:40 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=1df46c3601fba88d"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=7f68bd52a476f8b6"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "115"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"423-jS0d7/HCNIWgtuyDXsN2LNagvC4\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              97,
              100,
              32,
              57,
              46,
              32,
              78,
              101,
              115,
              105,
              108,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              53,
              52,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              80,
              101,
              114,
              99,
              101,
              110,
              116,
              97,
              103,
              101,
              34,
              58,
              32,
              49,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              53,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              105,
              112,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              49,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              51,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              51,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              104,
              111,
              110,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              51,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              50,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              54,
              53,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              93
            ]
          },
          "cookie": [],
          "responseTime": 557,
          "responseSize": 1059
        },
        "id": "a53ef9c9-82cc-4a85-acbc-b7acd62fea22",
        "assertions": [
          {
            "assertion": "1 is one of the test ids",
            "skipped": false
          },
          {
            "assertion": "2 is one of the test ids",
            "skipped": false
          },
          {
            "assertion": "Check for 'id' keys and have specified values (1,2)",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d5a0c25d-31c0-4839-934f-4c281c87a888",
          "length": 12,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e2422444-bab7-4078-8f3e-cffca35976f1"
        },
        "item": {
          "id": "ffcdeaf9-a072-4819-9b39-48c0243feccb",
          "name": "TC6_Check_Response_Body_For_Fixed_Keys",
          "request": {
            "url": {
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "590b4eb2-062f-4496-b69f-c06e57d88540",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "// Retrieve the expected keys from the local variable\r",
                  "const expectedKeys = pm.variables.get(\"expectedKeys\");\r",
                  "\r",
                  "// Parse the response body as JSON\r",
                  "const jsonData = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Check for all keys in response and their types\", function () {\r",
                  "    console.log(\"Data length: \"+jsonData.length);\r",
                  "\r",
                  "    // Ensure the response data is an array\r",
                  "    pm.expect(jsonData).to.be.an('array');\r",
                  "    console.log(\"response body as JSON array\");\r",
                  "\r",
                  "    // Iterate through each object in the response array\r",
                  "    jsonData.forEach(function (item, index) {\r",
                  "        // Check if all expected keys are present in the object\r",
                  "        expectedKeys.forEach(function (key) {\r",
                  "            pm.expect(item).haveOwnPropertyDescriptor(key, \"Key '${key}' is missing in object at index ${index}\");\r",
                  "        });\r",
                  "        // Check types of specific keys in each object\r",
                  "        pm.expect(item.id).to.be.a(\"number\");\r",
                  "        console.log(\"response body id type is number\");\r",
                  "        pm.expect(item.title).to.be.a(\"string\");\r",
                  "        console.log(\"response body title type is string\");\r",
                  "        pm.expect(item.description).to.be.a(\"string\");\r",
                  "        console.log(\"response body description type is string\");\r",
                  "        pm.expect(item.price).to.be.a(\"number\");\r",
                  "        console.log(\"response body price type is number\");\r",
                  "        pm.expect(item.isBasketDiscount).to.be.a(\"boolean\");\r",
                  "        console.log(\"response body isBasketDiscount type is boolean\");\r",
                  "        pm.expect(item.rating).to.be.a(\"number\");\r",
                  "        console.log(\"response body rating type is number\");\r",
                  "        pm.expect(item.stock).to.be.a(\"number\");\r",
                  "        console.log(\"response body stock type is number\");\r",
                  "        pm.expect(item.brand).to.be.a(\"string\");\r",
                  "        console.log(\"response body brand type is string\");\r",
                  "        pm.expect(item.category).to.be.a(\"string\");\r",
                  "        console.log(\"response body category type is string\");\r",
                  "        pm.expect(item.images).to.be.an(\"array\");\r",
                  "        console.log(\"response body images type is array\");\r",
                  "         pm.expect(item.images.length).to.be.above(0); // Check the 'images' array length\r",
                  "        item.images.forEach(function (image) {\r",
                  "            pm.expect(image).to.be.a('string'); // Check each image URL in the 'images' array\r",
                  "            console.log(\"response body image url is string\");\r",
                  "        });\r",
                  "    });\r",
                  "});"
                ],
                "_lastExecutionId": "6949257a-ef97-4187-8e32-00d4392da6c5"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "60b426db-8593-46df-9f81-ee03b6164c44",
                "type": "text/javascript",
                "exec": [
                  "// Define an array containing all expected keys\r",
                  "pm.variables.set(\"expectedKeys\", [\"id\", \"title\", \"description\", \"price\", \"isBasketDiscount\", \"rating\", \"stock\", \"brand\", \"category\", \"images\"]);\r",
                  ""
                ],
                "_lastExecutionId": "42c46727-b232-4372-8a74-ecb66054fa8d"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              ""
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5b2e5278-3a56-4a48-a22f-3792882c083e",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "acacf0c6-1c86-46f3-b57f-7a6632fad167",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:41 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=f506caa12adb8ac4"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=eb1e6b81ab31a398"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "114"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"423-jS0d7/HCNIWgtuyDXsN2LNagvC4\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              97,
              100,
              32,
              57,
              46,
              32,
              78,
              101,
              115,
              105,
              108,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              53,
              52,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              80,
              101,
              114,
              99,
              101,
              110,
              116,
              97,
              103,
              101,
              34,
              58,
              32,
              49,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              53,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              105,
              112,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              49,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              51,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              51,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              104,
              111,
              110,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              51,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              50,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              54,
              53,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              93
            ]
          },
          "cookie": [],
          "responseTime": 287,
          "responseSize": 1059
        },
        "id": "ffcdeaf9-a072-4819-9b39-48c0243feccb",
        "assertions": [
          {
            "assertion": "Check for all keys in response and their types",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b7356416-c0ad-4aba-9cba-370d4fd23698",
          "length": 12,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a0607cd2-09ad-4fe2-9657-ad40d04945e2"
        },
        "item": {
          "id": "b4ab1024-e73c-432a-b3de-2bce33d6b292",
          "name": "TC7_Check_Response_Body_For_Optional_Keys",
          "request": {
            "url": {
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "26b291f2-47c8-4042-a532-ece5b7943641",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "// Retrieve the expected keys from the local variable\r",
                  "const expectedOptionalKeys = pm.variables.get(\"expectedOptionalKeys\");\r",
                  "\r",
                  "// Retrieve the expected keys type from the local variable\r",
                  "const expectedOptionalKeysType = pm.variables.get(\"expectedOptionalKeysType\");\r",
                  "\r",
                  "// Parse the response body as JSON\r",
                  "const jsonData = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Check for optional keys in response and their types\", function () {\r",
                  "    console.log(\"Data length: \"+jsonData.length);\r",
                  "\r",
                  "    // Ensure the response data is an array\r",
                  "    pm.expect(jsonData).to.be.an('array');\r",
                  "    console.log(\"response body as JSON array\");\r",
                  "\r",
                  "    for (let i = 0; i < expectedOptionalKeysType.length; i++) {\r",
                  "    // Iterate through each object in the response array\r",
                  "        jsonData.forEach(function (item, index) {\r",
                  "        // Check if all expected keys are present in the object\r",
                  "\r",
                  "            // Check if the optional property exists in the object\r",
                  "            if (expectedOptionalKeysType[i]===\"number\" && expectedOptionalKeys[i] in item) {\r",
                  "                // If the property exists, assert its type \r",
                  "                pm.expect(Number.isInteger(item[expectedOptionalKeys[i]])).to.be.true;\r",
                  "                    console.log(\"response body basketDiscountPercentage type is number\");\r",
                  "            } else {\r",
                  "                // Handle cases where the property is not present (optional)\r",
                  "                console.log(\"Optional property '${expectedOptionalKeys[i]}' is missing in object at index ${index}\");\r",
                  "            }\r",
                  "      \r",
                  "            // Check if the optional property exists in the object\r",
                  "            if (expectedOptionalKeysType[i]===\"boolean\" && expectedOptionalKeys[i] in item) {\r",
                  "                // If the property exists, assert its type \r",
                  "                pm.expect(Boolean(item[expectedOptionalKeys[i]])).to.be.a(expectedOptionalKeysType[i]);\r",
                  "                console.log(\"response body isActive type is boolean\");\r",
                  "            } else {\r",
                  "                // Handle cases where the property is not present (optional)\r",
                  "                console.log(\"Optional property '${expectedOptionalKeys[i]}' is missing in object at index ${index}\");\r",
                  "            }\r",
                  "        });\r",
                  "    }\r",
                  "});"
                ],
                "_lastExecutionId": "34f3556f-7889-4d9c-8a2e-6424da569faa"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "64bd5896-5936-46ae-9426-2bcc8fb3d134",
                "type": "text/javascript",
                "exec": [
                  "// Define an array containing all optional keys\r",
                  "pm.variables.set(\"expectedOptionalKeys\", [\"basketDiscountPercentage\",\"isActive\"]);\r",
                  "\r",
                  "// Define an array containing all optional keys\r",
                  "pm.variables.set(\"expectedOptionalKeysType\", ['number','boolean']);"
                ],
                "_lastExecutionId": "ec36a8cb-4a04-4b50-9f33-6db80e81e6e0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              ""
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "96d12391-f2c5-4765-af94-e0486d45b0e6",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "7f6ccb45-407d-4c9e-bd3c-46605228b4d6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:41 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=8d645f1316b079ed"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=4b304d862487b655"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "113"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"423-jS0d7/HCNIWgtuyDXsN2LNagvC4\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              97,
              100,
              32,
              57,
              46,
              32,
              78,
              101,
              115,
              105,
              108,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              53,
              52,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              80,
              101,
              114,
              99,
              101,
              110,
              116,
              97,
              103,
              101,
              34,
              58,
              32,
              49,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              53,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              105,
              112,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              49,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              51,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              51,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              104,
              111,
              110,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              51,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              50,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              54,
              53,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              93
            ]
          },
          "cookie": [],
          "responseTime": 286,
          "responseSize": 1059
        },
        "id": "b4ab1024-e73c-432a-b3de-2bce33d6b292",
        "assertions": [
          {
            "assertion": "Check for optional keys in response and their types",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cb4d5755-c0b9-4c44-a34c-f9e84c4efd9b",
          "length": 12,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "00b3e05e-8fdc-443f-95d9-6427fc2db1c7"
        },
        "item": {
          "id": "0f208b56-b88e-491c-bc1e-9363437f310b",
          "name": "TC8_Compare_Id_Data",
          "request": {
            "url": {
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "disabled": true,
                "key": "id",
                "value": "{{randomId}}"
              }
            ],
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f15f5fa1-b931-4ba9-98c5-19077d47fcc7",
                "type": "text/javascript",
                "exec": [
                  "const responseIds = [1, 2];\r",
                  "const randomIndex = Math.floor(Math.random() * responseIds.length);\r",
                  "const randomId = responseIds[randomIndex];\r",
                  "\r",
                  "pm.variables.set(\"randomId\", randomId);\r",
                  "pm.request.url.query.add({ key: 'id', value: randomId.toString() });\r",
                  "\r",
                  "let expectedResponse;\r",
                  "\r",
                  "if (randomId === 1) {\r",
                  "    expectedResponse = {\r",
                  "        \"id\": 1,\r",
                  "        \"title\": \"Apple iPad 9. Nesil 64 GB\",\r",
                  "        \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                  "        \"price\": 5400,\r",
                  "        \"isBasketDiscount\": true,\r",
                  "        \"basketDiscountPercentage\": 10,\r",
                  "        \"rating\": 4.69,\r",
                  "        \"stock\": 50,\r",
                  "        \"isActive\": false,\r",
                  "        \"brand\": \"Apple\",\r",
                  "        \"category\": \"ipad\",\r",
                  "        \"images\": [\r",
                  "            \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r",
                  "            \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r",
                  "        ]\r",
                  "    };\r",
                  "} else {\r",
                  "    expectedResponse = {\r",
                  "        \"id\": 2,\r",
                  "        \"title\": \"Apple iPhone 12 64 GB\",\r",
                  "        \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                  "        \"price\": 13500,\r",
                  "        \"isBasketDiscount\": false,\r",
                  "        \"rating\": 4.4,\r",
                  "        \"stock\": 20,\r",
                  "        \"brand\": \"Apple\",\r",
                  "        \"category\": \"smartphones\",\r",
                  "        \"images\": [\r",
                  "            \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\r",
                  "        ]\r",
                  "    };\r",
                  "}\r",
                  "\r",
                  "pm.variables.set(\"expectedResponse\", expectedResponse);"
                ],
                "_lastExecutionId": "9cf4acc4-c3da-4aff-a11d-79111a39f92c"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4df75a99-bc72-4264-b7e5-2442b316ebb0",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "// Define the expected JSON data\r",
                  "const expectedData = pm.variables.get(\"expectedResponse\");\r",
                  "// Parse the response body as JSON\r",
                  "const responseData = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Compare expected JSON with response data\", function () {\r",
                  "    // Compare properties in the response with the expected data\r",
                  "    Object.keys(responseData).forEach(function (key) {\r",
                  "        pm.expect(responseData[key]).to.eql(expectedData[key]);\r",
                  "    });\r",
                  "    console.log(\"Compare expected JSON data with response data are same\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "a554cb00-f2c0-4dc3-bb28-9378f0b7609a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              ""
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [
              {
                "key": "id",
                "value": "2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "disabled": true,
              "key": "id",
              "value": "2"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a1ec2c9b-0497-4bd0-b878-e903cd9a1145",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "509e7fd4-471b-453e-84c8-d6d0d6dba396",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:41 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "443"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=b73117d2041b6a8e"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=c868a30b62e077ac"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "112"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"1bb-GLjpr+Clu0pI1o3GDVeth2Qsb2I\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              104,
              111,
              110,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              51,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              50,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              54,
              53,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125
            ]
          },
          "cookie": [],
          "responseTime": 298,
          "responseSize": 443
        },
        "id": "0f208b56-b88e-491c-bc1e-9363437f310b",
        "assertions": [
          {
            "assertion": "Compare expected JSON with response data",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e0579bae-da97-4c88-a8a2-b45d8fc449f1",
          "length": 12,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1c24850b-41b3-4bc3-9441-b91427b93a06"
        },
        "item": {
          "id": "a9e8a0dd-2d3b-4134-abed-317e2a5d1448",
          "name": "TC9_Compare_All_Data",
          "request": {
            "url": {
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "3f8ef4dc-f526-4927-aec8-4b6f44bdba94",
                "type": "text/javascript",
                "exec": [
                  "const expectedResponse =\r",
                  "[\r",
                  "  {\r",
                  "    \"id\": 1,\r",
                  "    \"title\": \"Apple iPad 9. Nesil 64 GB\",\r",
                  "    \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                  "    \"price\": 5400,\r",
                  "    \"isBasketDiscount\": true,\r",
                  "    \"basketDiscountPercentage\": 10,\r",
                  "    \"rating\": 4.69,\r",
                  "    \"stock\": 50,\r",
                  "    \"isActive\": false,\r",
                  "    \"brand\": \"Apple\",\r",
                  "    \"category\": \"ipad\",\r",
                  "    \"images\": [\r",
                  "      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r",
                  "      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r",
                  "    ]\r",
                  "  },\r",
                  "  {\r",
                  "    \"id\": 2,\r",
                  "    \"title\": \"Apple iPhone 12 64 GB\",\r",
                  "    \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                  "    \"price\": 13500,\r",
                  "    \"isBasketDiscount\": false,\r",
                  "    \"rating\": 4.4,\r",
                  "    \"stock\": 20,\r",
                  "    \"brand\": \"Apple\",\r",
                  "    \"category\": \"smartphones\",\r",
                  "    \"images\": [\r",
                  "      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\r",
                  "    ]\r",
                  "  }\r",
                  "];\r",
                  "\r",
                  "pm.variables.set(\"expectedResponse\", expectedResponse); "
                ],
                "_lastExecutionId": "cde02f42-d5a0-410e-8846-12e464a94224"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4c18aac0-b2e0-4429-b8e4-b1acd223ad7d",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "// Define the expected JSON data\r",
                  "const expectedData = pm.variables.get(\"expectedResponse\");\r",
                  "\r",
                  "// Parse the response body as JSON\r",
                  "const responseData = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Compare expected JSON with response data\", function () {\r",
                  "    // Ensure the response data is an array\r",
                  "    pm.expect(responseData).to.be.an('array');\r",
                  "\r",
                  "    // Check if the response length matches the expected data length\r",
                  "    pm.expect(responseData.length).to.equal(expectedData.length);\r",
                  "    console.log(\"Response data length is equal to expected data length\");\r",
                  "    // Compare each object in the response with the expected data\r",
                  "    expectedData.forEach(function (expectedItem, index) {\r",
                  "        const responseItem = responseData[index];\r",
                  "\r",
                  "        // Compare properties in each object\r",
                  "        Object.keys(expectedItem).forEach(function (key) {\r",
                  "            pm.expect(responseItem[key]).to.deep.equal(expectedItem[key]);\r",
                  "        });\r",
                  "    });\r",
                  "        console.log(\"Compare All product data with response data are same\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "cbb7143b-54cf-43be-96fe-83c7cb992870"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              ""
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fcc55a47-d6b8-48e7-8a47-edf6f9c42cde",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e2be92b5-f8d1-48a0-a361-d35b8537e0e3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:42 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=ec94b69f3ef696ff"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=73703d5cf3f61159"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "111"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"423-jS0d7/HCNIWgtuyDXsN2LNagvC4\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              97,
              100,
              32,
              57,
              46,
              32,
              78,
              101,
              115,
              105,
              108,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              53,
              52,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              80,
              101,
              114,
              99,
              101,
              110,
              116,
              97,
              103,
              101,
              34,
              58,
              32,
              49,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              53,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              105,
              112,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              49,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              51,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              51,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              104,
              111,
              110,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              51,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              50,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              54,
              53,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              93
            ]
          },
          "cookie": [],
          "responseTime": 612,
          "responseSize": 1059
        },
        "id": "a9e8a0dd-2d3b-4134-abed-317e2a5d1448",
        "assertions": [
          {
            "assertion": "Compare expected JSON with response data",
            "skipped": false
          },
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1b26e055-18f5-4e1a-bfd8-203d513aa504",
          "length": 12,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "97c5407a-3ac9-48ce-9e1a-f9e9b06d52f3"
        },
        "item": {
          "id": "2330415b-f160-4fc8-90b7-4adf47022651",
          "name": "TC11_Check_Product_Add",
          "request": {
            "url": {
              "path": [
                "add"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"id\": 3,\r\n    \"title\": \"Samsung Note 12 64 GB\",\r\n    \"description\": \"Lorem ipsum dolor sit amet.\",\r\n    \"price\": 10500,\r\n    \"isBasketDiscount\": true,\r\n    \"rating\": 4.6,\r\n    \"stock\": 30,\r\n    \"brand\": \"Samsung\",\r\n    \"category\": \"smartphones\",\r\n    \"images\": [\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/1_org_zoom.jpg\",\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/2_org_zoom.jpg\",\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/3_org_zoom.jpg\"\r\n        ]\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "391d4baa-cb52-4b4c-b784-70d99fe9eab7",
                "type": "text/javascript",
                "exec": [
                  "const expectedResponse =\r",
                  "[\r",
                  "  {\r",
                  "    \"id\": 1,\r",
                  "    \"title\": \"Apple iPad 9. Nesil 64 GB\",\r",
                  "    \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                  "    \"price\": 5400,\r",
                  "    \"isBasketDiscount\": true,\r",
                  "    \"basketDiscountPercentage\": 10,\r",
                  "    \"rating\": 4.69,\r",
                  "    \"stock\": 50,\r",
                  "    \"isActive\": false,\r",
                  "    \"brand\": \"Apple\",\r",
                  "    \"category\": \"ipad\",\r",
                  "    \"images\": [\r",
                  "      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r",
                  "      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r",
                  "    ]\r",
                  "  },\r",
                  "  {\r",
                  "    \"id\": 2,\r",
                  "    \"title\": \"Apple iPhone 12 64 GB\",\r",
                  "    \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                  "    \"price\": 13500,\r",
                  "    \"isBasketDiscount\": false,\r",
                  "    \"rating\": 4.4,\r",
                  "    \"stock\": 20,\r",
                  "    \"brand\": \"Apple\",\r",
                  "    \"category\": \"smartphones\",\r",
                  "    \"images\": [\r",
                  "      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\r",
                  "    ]\r",
                  "  },\r",
                  "    {\r",
                  "        \"id\": 3,\r",
                  "        \"title\": \"Samsung Note 12 64 GB\",\r",
                  "        \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                  "        \"price\": 10500,\r",
                  "        \"isBasketDiscount\": true,\r",
                  "        \"rating\": 4.6,\r",
                  "        \"stock\": 30,\r",
                  "        \"brand\": \"Samsung\",\r",
                  "        \"category\": \"smartphones\",\r",
                  "        \"images\": [\r",
                  "            \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/1_org_zoom.jpg\",\r",
                  "            \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/2_org_zoom.jpg\",\r",
                  "            \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/3_org_zoom.jpg\"\r",
                  "        ]\r",
                  "    }\r",
                  "];\r",
                  "\r",
                  "pm.variables.set(\"expectedResponse\", expectedResponse); "
                ],
                "_lastExecutionId": "360901fd-a0ce-488b-8802-58a3aa3ee5cc"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "bbbf1d25-f304-4f20-8fdd-72ebcbffe441",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 201\"] = responseCode.code === 201;\r",
                  "console.log(\"New product added\");\r",
                  "// Define the expected JSON data\r",
                  "const expectedData = pm.variables.get(\"expectedResponse\");\r",
                  "// Parse the response body as JSON\r",
                  "const responseData = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Compare expected JSON with response data\", function () {\r",
                  "    // Compare properties in the response with the expected data\r",
                  "    Object.keys(responseData).forEach(function (key) {\r",
                  "        pm.expect(responseData[key]).to.eql(expectedData[key]);\r",
                  "    });\r",
                  "    console.log(\"Compare expected JSON data with response data are same\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "ca112a15-1841-4c16-a64d-c6bcbeb4b189"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "add"
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9b1db3a1-1df5-4f02-a0f6-32469c7d9f2c",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "663",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"id\": 3,\r\n    \"title\": \"Samsung Note 12 64 GB\",\r\n    \"description\": \"Lorem ipsum dolor sit amet.\",\r\n    \"price\": 10500,\r\n    \"isBasketDiscount\": true,\r\n    \"rating\": 4.6,\r\n    \"stock\": 30,\r\n    \"brand\": \"Samsung\",\r\n    \"category\": \"smartphones\",\r\n    \"images\": [\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/1_org_zoom.jpg\",\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/2_org_zoom.jpg\",\r\n        \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57612383/1/3_org_zoom.jpg\"\r\n        ]\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6c7cf48a-c58d-43d1-a375-a9e6d5afa6b8",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:42 GMT"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=4df57f977e3e1e33"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=0b61ff2c1d7b5605"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "110"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"6e9-JcN618ds95UGVU+wA0kVlZKJEH0\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              97,
              100,
              32,
              57,
              46,
              32,
              78,
              101,
              115,
              105,
              108,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              53,
              52,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              80,
              101,
              114,
              99,
              101,
              110,
              116,
              97,
              103,
              101,
              34,
              58,
              32,
              49,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              53,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              105,
              112,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              49,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              51,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              51,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              50,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              104,
              111,
              110,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              51,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              52,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              50,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              54,
              53,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              32,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              51,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              83,
              97,
              109,
              115,
              117,
              110,
              103,
              32,
              78,
              111,
              116,
              101,
              32,
              49,
              50,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              49,
              48,
              53,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              51,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              83,
              97,
              109,
              115,
              117,
              110,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              115,
              109,
              97,
              114,
              116,
              112,
              104,
              111,
              110,
              101,
              115,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              50,
              51,
              56,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              50,
              51,
              56,
              51,
              47,
              49,
              47,
              50,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              109,
              110,
              114,
              101,
              115,
              105,
              122,
              101,
              47,
              49,
              50,
              48,
              48,
              47,
              49,
              56,
              48,
              48,
              47,
              116,
              121,
              57,
              52,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              49,
              48,
              52,
              48,
              52,
              47,
              48,
              57,
              47,
              55,
              52,
              51,
              52,
              54,
              49,
              49,
              55,
              47,
              53,
              55,
              54,
              49,
              50,
              51,
              56,
              51,
              47,
              49,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              93,
              10,
              32,
              32,
              32,
              32,
              125,
              10,
              93
            ]
          },
          "cookie": [],
          "responseTime": 303,
          "responseSize": 1769
        },
        "id": "2330415b-f160-4fc8-90b7-4adf47022651",
        "assertions": [
          {
            "assertion": "Compare expected JSON with response data",
            "skipped": false
          },
          {
            "assertion": "Status code is 201",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "369b5aee-ef87-479a-8d41-1854964bec87",
          "length": 12,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3ac93ef4-073a-4d31-96b2-2659a74ababc"
        },
        "item": {
          "id": "1af0e0ce-fbe0-446c-ab89-edde21a2b41f",
          "name": "TC12_Check_Product_Update",
          "request": {
            "url": {
              "path": [
                "put"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n        \"id\": 1,\r\n        \"title\": \"Apple iPad 10. Nesil 64 GB\",\r\n        \"description\": \"Lorem ipsum dolor sit amet.\",\r\n        \"price\": 5400,\r\n        \"isBasketDiscount\": true,\r\n        \"basketDiscountPercentage\": 10,\r\n        \"rating\": 4.69,\r\n        \"stock\": 50,\r\n        \"isActive\": false,\r\n        \"brand\": \"Apple\",\r\n        \"category\": \"ipad\",\r\n        \"images\": [\r\n            \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r\n            \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r\n        ]\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "afb42b03-07fc-44ce-a344-a0789b7505a3",
                "type": "text/javascript",
                "exec": [
                  "const expectedResponse =\r",
                  "  {\r",
                  "        \"id\": 1,\r",
                  "        \"title\": \"Apple iPad 10. Nesil 64 GB\",\r",
                  "        \"description\": \"Lorem ipsum dolor sit amet.\",\r",
                  "        \"price\": 5400,\r",
                  "        \"isBasketDiscount\": true,\r",
                  "        \"basketDiscountPercentage\": 10,\r",
                  "        \"rating\": 4.69,\r",
                  "        \"stock\": 50,\r",
                  "        \"isActive\": false,\r",
                  "        \"brand\": \"Apple\",\r",
                  "        \"category\": \"ipad\",\r",
                  "        \"images\": [\r",
                  "            \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r",
                  "            \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r",
                  "        ]\r",
                  "    };\r",
                  "\r",
                  "pm.variables.set(\"expectedResponse\", expectedResponse); "
                ],
                "_lastExecutionId": "3a22f50d-7764-4649-a07a-34003c2f3bac"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "2d916e52-b0fc-48bd-9673-86a443e50d24",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 202\"] = responseCode.code === 202;\r",
                  "console.log(\"Product updated\");\r",
                  "// Define the expected JSON data\r",
                  "const expectedData = pm.variables.get(\"expectedResponse\");\r",
                  "// Parse the response body as JSON\r",
                  "const responseData = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Compare expected JSON with response data\", function () {\r",
                  "    // Compare properties in the response with the expected data\r",
                  "    Object.keys(responseData).forEach(function (key) {\r",
                  "        pm.expect(responseData[key]).to.eql(expectedData[key]);\r",
                  "    });\r",
                  "    console.log(\"Compare expected JSON data with response data are same\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "81e19cfe-37b5-4b00-93cd-3f7018fca256"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "put"
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "74bb63d4-4bb0-4f0d-82c1-93eef8358a47",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "619",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n        \"id\": 1,\r\n        \"title\": \"Apple iPad 10. Nesil 64 GB\",\r\n        \"description\": \"Lorem ipsum dolor sit amet.\",\r\n        \"price\": 5400,\r\n        \"isBasketDiscount\": true,\r\n        \"basketDiscountPercentage\": 10,\r\n        \"rating\": 4.69,\r\n        \"stock\": 50,\r\n        \"isActive\": false,\r\n        \"brand\": \"Apple\",\r\n        \"category\": \"ipad\",\r\n        \"images\": [\r\n            \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\r\n            \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\r\n        ]\r\n    }",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9403e40f-d1b5-4e27-a30a-1a7f013f95c7",
          "status": "Accepted",
          "code": 202,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:43 GMT"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "539"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=d8c06205921febe8"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=e0bf935c09fdad02"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "109"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"21b-RBawcPn+o0HIYV/BF5zovNU/Zyo\""
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              105,
              100,
              34,
              58,
              32,
              49,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              116,
              105,
              116,
              108,
              101,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              32,
              105,
              80,
              97,
              100,
              32,
              49,
              48,
              46,
              32,
              78,
              101,
              115,
              105,
              108,
              32,
              54,
              52,
              32,
              71,
              66,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              32,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              46,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              112,
              114,
              105,
              99,
              101,
              34,
              58,
              32,
              53,
              52,
              48,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              66,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              98,
              97,
              115,
              107,
              101,
              116,
              68,
              105,
              115,
              99,
              111,
              117,
              110,
              116,
              80,
              101,
              114,
              99,
              101,
              110,
              116,
              97,
              103,
              101,
              34,
              58,
              32,
              49,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              114,
              97,
              116,
              105,
              110,
              103,
              34,
              58,
              32,
              52,
              46,
              54,
              57,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              115,
              116,
              111,
              99,
              107,
              34,
              58,
              32,
              53,
              48,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              105,
              115,
              65,
              99,
              116,
              105,
              118,
              101,
              34,
              58,
              32,
              102,
              97,
              108,
              115,
              101,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              98,
              114,
              97,
              110,
              100,
              34,
              58,
              32,
              34,
              65,
              112,
              112,
              108,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              97,
              116,
              101,
              103,
              111,
              114,
              121,
              34,
              58,
              32,
              34,
              105,
              112,
              97,
              100,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              105,
              109,
              97,
              103,
              101,
              115,
              34,
              58,
              32,
              91,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              49,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              49,
              47,
              49,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              99,
              100,
              110,
              46,
              100,
              115,
              109,
              99,
              100,
              110,
              46,
              99,
              111,
              109,
              47,
              116,
              121,
              51,
              50,
              51,
              47,
              112,
              114,
              111,
              100,
              117,
              99,
              116,
              47,
              109,
              101,
              100,
              105,
              97,
              47,
              105,
              109,
              97,
              103,
              101,
              115,
              47,
              50,
              48,
              50,
              50,
              48,
              50,
              48,
              52,
              47,
              49,
              52,
              47,
              52,
              51,
              54,
              57,
              52,
              54,
              51,
              55,
              47,
              50,
              54,
              50,
              48,
              48,
              52,
              55,
              52,
              51,
              47,
              51,
              47,
              51,
              95,
              111,
              114,
              103,
              95,
              122,
              111,
              111,
              109,
              46,
              106,
              112,
              103,
              34,
              10,
              32,
              32,
              32,
              32,
              93,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 410,
          "responseSize": 539
        },
        "id": "1af0e0ce-fbe0-446c-ab89-edde21a2b41f",
        "assertions": [
          {
            "assertion": "Compare expected JSON with response data",
            "skipped": false
          },
          {
            "assertion": "Status code is 202",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "83a0db82-7a0d-41b1-9ab8-54ec73cc33ad",
          "length": 12,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ad6d67aa-9269-47cc-a9e2-b3505e04e3ff"
        },
        "item": {
          "id": "70e808f5-25a8-455e-b6ec-46eaf6bac726",
          "name": "TC13_Check_Product_Add",
          "request": {
            "url": {
              "path": [
                "delete"
              ],
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "531b3643-b50d-49c4-a7b6-c98241d8d7fb",
                "type": "text/javascript",
                "exec": [
                  "const responseIds = [1, 2];\r",
                  "const randomIndex = Math.floor(Math.random() * responseIds.length);\r",
                  "const randomId = responseIds[randomIndex];\r",
                  "\r",
                  "pm.variables.set(\"randomId\", randomId);\r",
                  "pm.request.url.query.add({ key: 'id', value: randomId.toString() });"
                ],
                "_lastExecutionId": "d9700a94-c659-4ce2-8613-a5f1eb9e167a"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "b53c1bad-e357-404b-bff7-6c3b2916e332",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 204\"] = responseCode.code === 204;\r",
                  "console.log(\"${randomId} Product added\");\r",
                  "\r",
                  "pm.test(\"Check for empty response\", function () {\r",
                  "    const responseData = pm.response.text();\r",
                  "    console.log(\"Response Body:\", pm.response.text());\r",
                  "    pm.expect(responseBody).to.be.empty; // Compare response data with an empty object\r",
                  "    console.log(\"Response Body is empty\");\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "c37a73e1-82d0-484d-b082-7ad9ee06bc44"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "delete"
            ],
            "host": [
              "8c5a7056-5a58-4153-a5c3-35771fcd1ef8",
              "mock",
              "pstmn",
              "io"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.33.0",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ad3232f4-354e-4963-9524-3a1b11cd1340",
              "system": true
            },
            {
              "key": "Host",
              "value": "8c5a7056-5a58-4153-a5c3-35771fcd1ef8.mock.pstmn.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b1b3bf6c-fc0e-4860-8406-c5d1aa2c7a60",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "Date",
              "value": "Mon, 11 Dec 2023 02:02:43 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "x-srv-trace",
              "value": "v=1;t=f63d98c2192dffc2"
            },
            {
              "key": "x-srv-span",
              "value": "v=1;s=e72a9edf3028e3d7"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "120"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "108"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "1702260219"
            },
            {
              "key": "ETag",
              "value": "W/\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\""
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 316,
          "responseSize": 0
        },
        "id": "70e808f5-25a8-455e-b6ec-46eaf6bac726",
        "assertions": [
          {
            "assertion": "Check for empty response",
            "skipped": false
          },
          {
            "assertion": "Status code is 204",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 9371
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Response time is less than 500ms",
          "message": "expected 1031 to be below 500",
          "stack": "AssertionError: expected 1031 to be below 500\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "3ea835fa3aed503e2af259552225592a",
          "id": "8cffca37-2cf7-4c32-bcc3-be847af2d0ab",
          "timestamp": 1702260159633,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6e7c9605-4575-4ce3-b28a-9d4f10e1ae98",
          "name": "TC1_Check_Status_Code_200",
          "request": {
            "url": {
              "host": [
                "{{baseURL}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "x-api-key",
                "value": "{{x-api-key}}"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "plain"
              },
              "id": "b63dd40f-80ed-4478-b4f3-4ff1e3260d96",
              "name": "TC1_Check_Status_Code_200",
              "originalRequest": {
                "url": {
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "key": "Content-Length",
                  "value": "937"
                },
                {
                  "key": "Cache-Control",
                  "value": "max-age=300"
                },
                {
                  "key": "Content-Security-Policy",
                  "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                },
                {
                  "key": "Content-Type",
                  "value": "text/plain; charset=utf-8"
                },
                {
                  "key": "ETag",
                  "value": "W/\"ee7c17ed6bcbb2535a928e2f70226a0558ed7b91db219a77300c30bb068b7ed4\""
                },
                {
                  "key": "Strict-Transport-Security",
                  "value": "max-age=31536000"
                },
                {
                  "key": "X-Content-Type-Options",
                  "value": "nosniff"
                },
                {
                  "key": "X-Frame-Options",
                  "value": "deny"
                },
                {
                  "key": "X-XSS-Protection",
                  "value": "1; mode=block"
                },
                {
                  "key": "X-GitHub-Request-Id",
                  "value": "8D60:DB59:1890F8F:19C59CB:657607E9"
                },
                {
                  "key": "Accept-Ranges",
                  "value": "bytes"
                },
                {
                  "key": "Date",
                  "value": "Sun, 10 Dec 2023 20:43:10 GMT"
                },
                {
                  "key": "Via",
                  "value": "1.1 varnish"
                },
                {
                  "key": "X-Served-By",
                  "value": "cache-sof1510032-SOF"
                },
                {
                  "key": "X-Cache",
                  "value": "HIT"
                },
                {
                  "key": "X-Cache-Hits",
                  "value": "2"
                },
                {
                  "key": "X-Timer",
                  "value": "S1702240990.322666,VS0,VE0"
                },
                {
                  "key": "Vary",
                  "value": "Authorization,Accept-Encoding,Origin"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cross-Origin-Resource-Policy",
                  "value": "cross-origin"
                },
                {
                  "key": "X-Fastly-Request-ID",
                  "value": "b6941521245f5ad9e8943867e2cd323745566bab"
                },
                {
                  "key": "Expires",
                  "value": "Sun, 10 Dec 2023 20:48:10 GMT"
                },
                {
                  "key": "Source-Age",
                  "value": "264"
                }
              ],
              "body": "[\n  {\n    \"id\": 1,\n    \"title\": \"Apple iPad 9. Nesil 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 5400,\n    \"isBasketDiscount\": true,\n    \"basketDiscountPercentage\": 10,\n    \"rating\": 4.69,\n    \"stock\": 50,\n    \"isActive\": false,\n    \"brand\": \"Apple\",\n    \"category\": \"ipad\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\n      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Apple iPhone 12 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 13500,\n    \"isBasketDiscount\": false,\n    \"rating\": 4.4,\n    \"stock\": 20,\n    \"brand\": \"Apple\",\n    \"category\": \"smartphones\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\n    ]\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c795762-eb27-4277-86d1-ab8e3877a57c",
                "type": "text/javascript",
                "exec": [
                  "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                  "\r",
                  "pm.test(\"Response time is less than 500ms\", function () {\r",
                  "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                  "    console.log(\"Response Time: \", pm.response.responseTime.toString());\r",
                  "});"
                ],
                "_lastExecutionId": "53e7819a-15cd-4aec-aba2-13a5e5c8a351"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "9bf13f1a-7bdf-4d36-aebf-fda6f06ff34f",
                "type": "text/javascript",
                "exec": [
                  ""
                ],
                "_lastExecutionId": "c993a032-fb61-43a3-a3d5-510ebc516974"
              }
            }
          ]
        },
        "parent": {
          "id": "d2cfc3f0-44d4-4338-94eb-5ee894277e25",
          "name": "TS1_GET_Check_Header_and_Response_Codes",
          "item": [
            {
              "id": "6e7c9605-4575-4ce3-b28a-9d4f10e1ae98",
              "name": "TC1_Check_Status_Code_200",
              "request": {
                "url": {
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-api-key",
                    "value": "{{x-api-key}}"
                  }
                ],
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "plain"
                  },
                  "id": "b63dd40f-80ed-4478-b4f3-4ff1e3260d96",
                  "name": "TC1_Check_Status_Code_200",
                  "originalRequest": {
                    "url": {
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "937"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "max-age=300"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Content-Type",
                      "value": "text/plain; charset=utf-8"
                    },
                    {
                      "key": "ETag",
                      "value": "W/\"ee7c17ed6bcbb2535a928e2f70226a0558ed7b91db219a77300c30bb068b7ed4\""
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "8D60:DB59:1890F8F:19C59CB:657607E9"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 20:43:10 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510032-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "HIT"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "2"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702240990.322666,VS0,VE0"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b6941521245f5ad9e8943867e2cd323745566bab"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 20:48:10 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "264"
                    }
                  ],
                  "body": "[\n  {\n    \"id\": 1,\n    \"title\": \"Apple iPad 9. Nesil 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 5400,\n    \"isBasketDiscount\": true,\n    \"basketDiscountPercentage\": 10,\n    \"rating\": 4.69,\n    \"stock\": 50,\n    \"isActive\": false,\n    \"brand\": \"Apple\",\n    \"category\": \"ipad\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\n      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Apple iPhone 12 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 13500,\n    \"isBasketDiscount\": false,\n    \"rating\": 4.4,\n    \"stock\": 20,\n    \"brand\": \"Apple\",\n    \"category\": \"smartphones\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\n    ]\n  }\n]",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c795762-eb27-4277-86d1-ab8e3877a57c",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                      "\r",
                      "pm.test(\"Response time is less than 500ms\", function () {\r",
                      "    pm.expect(pm.response.responseTime).to.be.below(500);\r",
                      "    console.log(\"Response Time: \", pm.response.responseTime.toString());\r",
                      "});"
                    ],
                    "_lastExecutionId": "53e7819a-15cd-4aec-aba2-13a5e5c8a351"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "9bf13f1a-7bdf-4d36-aebf-fda6f06ff34f",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "c993a032-fb61-43a3-a3d5-510ebc516974"
                  }
                }
              ]
            },
            {
              "id": "f7b02d30-4199-4f8d-8d37-14f754fc03f3",
              "name": "TC2_Check_Content_Type",
              "request": {
                "url": {
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "plain"
                  },
                  "id": "e56f551e-4a39-4c9e-bbbd-cd098338ffbd",
                  "name": "TC2_Check_Content_Type",
                  "originalRequest": {
                    "url": {
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET"
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "937"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "max-age=300"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Content-Type",
                      "value": "text/plain; charset=utf-8"
                    },
                    {
                      "key": "ETag",
                      "value": "W/\"ee7c17ed6bcbb2535a928e2f70226a0558ed7b91db219a77300c30bb068b7ed4\""
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "9C96:E8F4:1D4C192:1EC5137:65762A00"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 21:13:37 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510038-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "MISS"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "0"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702242817.094457,VS0,VE181"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b3126f33a6a68d083585dc1f017eb7be1fd596f0"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 21:18:37 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "0"
                    }
                  ],
                  "body": "[\n  {\n    \"id\": 1,\n    \"title\": \"Apple iPad 9. Nesil 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 5400,\n    \"isBasketDiscount\": true,\n    \"basketDiscountPercentage\": 10,\n    \"rating\": 4.69,\n    \"stock\": 50,\n    \"isActive\": false,\n    \"brand\": \"Apple\",\n    \"category\": \"ipad\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/ty321/product/media/images/20220204/14/43694637/262004743/1/1_org_zoom.jpg\",\n      \"https://cdn.dsmcdn.com/ty323/product/media/images/20220204/14/43694637/262004743/3/3_org_zoom.jpg\"\n    ]\n  },\n  {\n    \"id\": 2,\n    \"title\": \"Apple iPhone 12 64 GB\",\n    \"description\": \"Lorem ipsum dolor sit amet.\",\n    \"price\": 13500,\n    \"isBasketDiscount\": false,\n    \"rating\": 4.4,\n    \"stock\": 20,\n    \"brand\": \"Apple\",\n    \"category\": \"smartphones\",\n    \"images\": [\n      \"https://cdn.dsmcdn.com/mnresize/1200/1800/ty94/product/media/images/20210404/09/74346117/57616583/1/1_org_zoom.jpg\"\n    ]\n  }\n]",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a4f30400-1cb6-4737-b834-1651e7a2d7b0",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"Status code is 200\"] = responseCode.code === 200;\r",
                      "var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");\r",
                      "\r",
                      "tests[\"Has Content-Type\"] = contentTypeHeaderExists;\r",
                      "console.log(\"Content-Type is exist\");\r",
                      "\r",
                      "if (contentTypeHeaderExists) {\r",
                      "    tests[\"Content-Type is text/plain; charset=utf-8\"] = \r",
                      "      responseHeaders[\"Content-Type\"].has(\"text/html; charset=utf-8\");\r",
                      "      console.log(\"Content-Type is text/html; charset=utf-8\");\r",
                      "}\r",
                      ""
                    ],
                    "_lastExecutionId": "df67d4a4-36bd-4713-91c8-75c3f943f8f2"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "2d85ad48-652a-4e41-ae12-d7baf0b8b787",
                    "type": "text/javascript",
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "1acc4dd7-3244-40b1-a427-aaed776e44ac"
                  }
                }
              ]
            },
            {
              "id": "8e7a3425-17bb-40eb-bdc0-8f4ad454f8fd",
              "name": "TC3_Check_Status_Code_40x",
              "request": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode40x}}"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ccf9681e-a10d-4ea7-90f0-3c50ebc14480",
                  "name": "TC3_Check_Status_Code_400",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "badrequest"
                      ],
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "x-mock-response-code",
                        "value": "{{randomResponseCode40x}}"
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510038-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "MISS"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "0"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702243249.055240,VS0,VE168"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "0"
                    }
                  ],
                  "body": "{\n    \"error\": {\n        \"name\": \"mockBadRequest\",\n        \"message\": \"400 Bad Request\",\n        \"header\": \"400 Bad Request\"\n    }\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "97e9010d-1f5b-4cc4-ab30-25cee5821f31",
                  "name": "TC3_Check_Status_Code_401",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "badrequest"
                      ],
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "x-mock-response-code",
                        "value": "{{randomResponseCode40x}}"
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510038-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "MISS"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "0"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702243249.055240,VS0,VE168"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "0"
                    }
                  ],
                  "body": "{\n    \"error\": {\n        \"name\": \"mockUnauthorized\",\n        \"message\": \"401 Unauthorized\",\n        \"header\": \"401 Unauthorized\"\n    }\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "77233782-5754-4a8f-923b-3bc0664df863",
                  "name": "TC3_Check_Status_Code_402",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "badrequest"
                      ],
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "x-mock-response-code",
                        "value": "{{randomResponseCode40x}}"
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Payment Required",
                  "code": 402,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510038-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "MISS"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "0"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702243249.055240,VS0,VE168"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "0"
                    }
                  ],
                  "body": "{\n    \"error\": {\n        \"name\": \"mockPaymentRequired\",\n        \"message\": \"402 Payment Required\",\n        \"header\": \"402 Payment Required\"\n    }\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "56fbe7de-a646-48a0-b005-cb694396d3c1",
                  "name": "TC3_Check_Status_Code_403",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "badrequest"
                      ],
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "x-mock-response-code",
                        "value": "{{randomResponseCode40x}}"
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510038-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "MISS"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "0"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702243249.055240,VS0,VE168"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "0"
                    }
                  ],
                  "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"403 Forbidden\",\n        \"header\": \"403 Forbidden\"\n    }\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "bebaa623-500b-4ef3-9e51-aa786c8344ed",
                  "name": "TC3_Check_Status_Code_404",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "badrequest"
                      ],
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "x-mock-response-code",
                        "value": "{{randomResponseCode40x}}"
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510038-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "MISS"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "0"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702243249.055240,VS0,VE168"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "0"
                    }
                  ],
                  "body": "{\n    \"error\": {\n        \"name\": \"mockNotFound\",\n        \"message\": \"404 Not Found\",\n        \"header\": \"404 Not Found\"\n    }\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "be1a41bf-3637-4f50-8817-4fd23d321b06",
                  "name": "TC3_Check_Status_Code_405",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "badrequest"
                      ],
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "x-mock-response-code",
                        "value": "{{randomResponseCode40x}}"
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510038-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "MISS"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "0"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702243249.055240,VS0,VE168"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "0"
                    }
                  ],
                  "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"405 Method Not Allowed\",\n        \"header\": \"405 Method Not Allowed\"\n    }\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "384e25c0-e114-49fc-b8e4-88becd69b00f",
                  "name": "TC3_Check_Status_Code_406",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "badrequest"
                      ],
                      "host": [
                        "{{baseURL}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "x-mock-response-code",
                        "value": "{{randomResponseCode40x}}"
                      }
                    ],
                    "method": "GET"
                  },
                  "status": "Not Acceptable",
                  "code": 406,
                  "header": [
                    {
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "key": "Content-Length",
                      "value": "14"
                    },
                    {
                      "key": "Content-Security-Policy",
                      "value": "default-src 'none'; style-src 'unsafe-inline'; sandbox"
                    },
                    {
                      "key": "Strict-Transport-Security",
                      "value": "max-age=31536000"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-XSS-Protection",
                      "value": "1; mode=block"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "key": "X-GitHub-Request-Id",
                      "value": "1DAA:AEBE:17DCFF9:191391D:65762BB0"
                    },
                    {
                      "key": "Accept-Ranges",
                      "value": "bytes"
                    },
                    {
                      "key": "Date",
                      "value": "Sun, 10 Dec 2023 21:20:49 GMT"
                    },
                    {
                      "key": "Via",
                      "value": "1.1 varnish"
                    },
                    {
                      "key": "X-Served-By",
                      "value": "cache-sof1510038-SOF"
                    },
                    {
                      "key": "X-Cache",
                      "value": "MISS"
                    },
                    {
                      "key": "X-Cache-Hits",
                      "value": "0"
                    },
                    {
                      "key": "X-Timer",
                      "value": "S1702243249.055240,VS0,VE168"
                    },
                    {
                      "key": "Vary",
                      "value": "Authorization,Accept-Encoding,Origin"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Cross-Origin-Resource-Policy",
                      "value": "cross-origin"
                    },
                    {
                      "key": "X-Fastly-Request-ID",
                      "value": "b500180152228dc5cd168057fa2a8ef2e6a3fe7f"
                    },
                    {
                      "key": "Expires",
                      "value": "Sun, 10 Dec 2023 21:25:49 GMT"
                    },
                    {
                      "key": "Source-Age",
                      "value": "0"
                    }
                  ],
                  "body": "{\n    \"error\": {\n        \"name\": \"mockError\",\n        \"message\": \"406 Not Acceptable\",\n        \"header\": \"406 Not Acceptable\"\n    }\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7d5a9cd-cbea-4e82-8315-dc5532ec0d10",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Verify response status code\", function () {\r",
                      "    const randomResponseCode = pm.variables.get('randomResponseCode40x');\r",
                      "    pm.expect(pm.response.code).to.eql(parseInt(randomResponseCode));\r",
                      "    const responseBody = pm.response.json();\r",
                      "    console.log(\"Error message: \"+ responseBody.error.message);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "6e06d805-97b8-493f-a617-e8116db461f1"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "62df19fc-3a8a-4fa5-89af-c85e1b4f1c6d",
                    "type": "text/javascript",
                    "exec": [
                      "const responseCodes = [\"400\", \"401\", \"402\", \"403\", \"404\", \"405\", \"406\"];\r",
                      "const randomIndex = Math.floor(Math.random()*responseCodes.length);\r",
                      "const randomResponseCode = responseCodes[randomIndex];\r",
                      "    \r",
                      "pm.variables.set(\"randomResponseCode40x\", randomResponseCode.toString());"
                    ],
                    "_lastExecutionId": "2bfe8747-e632-4f04-8d85-d4c770a440b0"
                  }
                }
              ]
            },
            {
              "id": "3c9a08ee-cffe-4c96-91f4-6c7dd5a6a882",
              "name": "TC4_Check_Status_Code_50x",
              "request": {
                "url": {
                  "path": [
                    "badrequest"
                  ],
                  "host": [
                    "{{baseURL}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "x-mock-response-code",
                    "value": "{{randomResponseCode50x}}"
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3d7ed6eb-c4fe-4546-bdb9-e3ae3c35735f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Verify response status code\", function () {\r",
                      "    const randomResponseCode = pm.variables.get('randomResponseCode50x');\r",
                      "    pm.expect(pm.response.code).to.eql(parseInt(randomResponseCode));\r",
                      "    const responseBody = pm.response.json();\r",
                      "    console.log(\"Error message: \"+ responseBody.error.message);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "31ce77f3-2830-44f8-877a-5d69653633ac"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "13580945-3a9f-458b-bc34-b666ba5b6d59",
                    "type": "text/javascript",
                    "exec": [
                      "const responseCodes = [\"500\", \"501\", \"502\", \"503\", \"504\", \"505\", \"506\"];\r",
                      "const randomIndex = Math.floor(Math.random()*responseCodes.length);\r",
                      "const randomResponseCode = responseCodes[randomIndex];\r",
                      "    \r",
                      "pm.variables.set(\"randomResponseCode50x\", randomResponseCode.toString());"
                    ],
                    "_lastExecutionId": "f15b0fa1-91b6-431e-8f13-0bd23798a024"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 12,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "3a4bd067-e9b4-491a-bea8-f66b8e0f6e76",
          "httpRequestId": "d3f713c2-c219-4bfe-ba1d-599b0161f2e3",
          "scriptId": "9c795762-eb27-4277-86d1-ab8e3877a57c",
          "execution": "53e7819a-15cd-4aec-aba2-13a5e5c8a351"
        }
      }
    ],
    "error": null
  }
}